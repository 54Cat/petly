{"version":3,"file":"static/js/761.3e1f9bc7.chunk.js","mappings":"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","sources":["components/CardsList/CardsListStyled.jsx","components/CardsList/CardsList.jsx","components/OurFriendsCard/OurFriendsCardStyled.js","components/Utils/helpers/emptyInfoString.js","components/WorkWeekTable/WorkWeekTableStyled.js","components/Utils/helpers/getWeekDay.js","components/WorkWeekTable/workWeekItem.jsx","components/WorkWeekTable/WorkWeekTable.jsx","components/OurFriendsCard/OurFriendsCard.jsx","components/Utils/helpers/friendsResizeStyles.js","redux/Friends/fetchFriends.js","pages/Friends/FriendsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    text-align: left;\n    display: flex;\n    flex-wrap: wrap;\n    row-gap: 40px;\n\n    @media (min-width: 768px) {\n        row-gap: 60px;\n        column-gap: 32px;\n    }\n`\n\n","import { nanoid } from \"nanoid\"\nimport { List } from \"./CardsListStyled\"\nexport const CardsList = ({cardsArray, CardsItem, styles}) => {\n    return <List style={styles}> \n        {cardsArray && cardsArray.map(card => {\n            return <CardsItem key={card._id?? nanoid()} card={card} />\n        })}\n    </List>\n}","import styled from '@emotion/styled';\n\nexport const List = styled.ol`\n    display: flex;\n    flex-wrap: wrap;\n    background-color: #fdf7f2;\n    align-items: center;\n    justify-content: center;\n    padding: 0px;\n    margin: 0px;\n`;\n\nexport const Card = styled.li`\n    position: relative;\n    display: block;\n    flex-basis: 100%;\n    box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n    background-color: #ffffff;\n    border-radius: 40px;\n    padding: 12px 4px;\n\n    @media (min-width: 768px) {\n        flex-basis: calc((100% - 32px - 16px) / 2);\n        padding: 16px 4px;\n    }\n\n    @media (min-width: 1280px) {\n        flex-basis: calc((100% - 64px - 24px) / 3);\n    }\n`;\n\nexport const Title = styled.h3`\n    text-align: center;\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 1.33;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration-line: underline;\n    height: 40px;\n    margin-bottom: 10px;\n    color: #f59256;\n    text-align: center;\n\n    @media (min-width: 768px) {\n        font-size: 16px;\n        line-height: 1.37;\n        margin-bottom: 16px;\n    }\n\n    @media (min-width: 1280px) {\n        font-size: 20px;\n        line-height: 1.35;\n    }\n\n    &:hover,\n    :focus {\n        color: #ff6101;\n    }\n`;\n\nexport const FlexBox = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const Image = styled.img`\n    width: 110px;\n    height: 78px;\n    margin-right: 12px;\n\n    @media (min-width: 768px) {\n        width: 120px;\n        height: 85px;\n        margin-right: 14px;\n    }\n\n    @media (min-width: 1280px) {\n        width: 158px;\n        height: 112px;\n        margin-right: 16px;\n    }\n`;\n\nexport const Info = styled.p`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    color: #000000;\n\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 1.35;\n    }\n\n    @media (min-width: 1280px) {\n        font-size: 16px;\n        line-height: 1.37;\n    }\n`;\n\nexport const InfoTime = styled.div`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    color: #000000;\n\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 1.35;\n    }\n\n    @media (min-width: 1280px) {\n        font-size: 16px;\n        line-height: 1.37;\n    }\n    \n    &:hover,\n    :focus {\n        color: #f59256;\n    }\n`;\n\nexport const InfoLink = styled.a`\n    text-decoration: none;\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    color: #000000;\n\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 1.35;\n    }\n\n    @media (min-width: 1280px) {\n        font-size: 16px;\n        line-height: 1.37;\n    }\n\n    &:hover,\n    :focus {\n        color: #f59256;\n    }\n`;\n\nexport const AddressLink = styled.a`\n    \n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    color: #000000;\n    text-decoration-line: underline;\n\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 19px;\n    }\n\n    @media (min-width: 1280px) {\n        font-size: 16px;\n        line-height: 22px;\n    }\n\n    &:hover,\n    :focus {\n        color: #f59256;\n    }\n`;\n\nexport const SpanInfo = styled.span`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    text-decoration: none;\n    color: #000000;\n\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 1.35;\n    }\n\n    @media (min-width: 1280px) {\n        font-size: 16px;\n        line-height: 1.37;\n    }\n`;\n\nexport const BoxInfo = styled.div`\n    :not(:last-child) {\n        margin-bottom: 4px;\n    }\n\n    @media (min-width: 768px) {\n        :not(:last-child) {\n            margin-bottom: 8px;\n        }\n    }\n\n    @media (min-width: 1280px) {\n        :not(:last-child) {\n            margin-bottom: 12px;\n        }\n    }    \n`;","import { SpanInfo } from 'components/OurFriendsCard/OurFriendsCardStyled';\n\nconst ifEmptyString = () => <SpanInfo>------------------</SpanInfo>;\n\nexport default ifEmptyString;\n","import styled from '@emotion/styled';\n\nexport const ScheduleBox = styled.div`\n    position: absolute;\n    z-index: 2;\n    left: 178px;\n    top: 114px;\n    bottom: 20px;\n    width: 120px;\n    height: 140px;\n    padding: 12px;\n\n    background: #FFFFFF;\n    border: 1px solid #F59256;\n    box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.25);\n    border-radius: 8px;\n`\n\nexport const ScheduleBoxItem = styled.div`\n    display: flex;\n    justify-content: space-between;\n    text-align: center;\n    margin-bottom: 4px;\n\n    &:last-child{\n        margin-bottom: 0px;\n    }\n`\n\nexport const ScheduleInfo = styled.p`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    color: #000000;\n`\n\nexport const CurrentInfo = styled.p`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    color: #F59256;\n`","function getWeekDay(date) {\n    let days = ['SU', 'MN', 'TU', 'WE', 'TH', 'FR', 'SA'];\n\n    return days[date.getDay()];\n}\n\nexport default getWeekDay","import { ScheduleBoxItem, ScheduleInfo, CurrentInfo } from \"./WorkWeekTableStyled\";\nimport getWeekDay from \"components/Utils/helpers/getWeekDay\";\nimport { useState, useEffect } from \"react\";\n\nconst WorkWeekItem = ({ scheduleItem }) => {\n    const [currentDay, setCurrentDay] = useState(false);\n    const { day, from, to } = scheduleItem;\n    let now = new Date();\n    let dayName = getWeekDay(now)\n\n    useEffect(() => {\n        if (dayName === day) {\n            setCurrentDay(state => state = true)\n        }   \n    }, [day, dayName])\n\n    return (\n        currentDay ?\n        <ScheduleBoxItem>\n            <CurrentInfo >{day}</CurrentInfo>\n            <CurrentInfo >{`${from} - ${to}`}</CurrentInfo>\n        </ScheduleBoxItem>\n        : <ScheduleBoxItem>\n            <ScheduleInfo >{day}</ScheduleInfo>\n            <ScheduleInfo >{`${from} - ${to}`}</ScheduleInfo>\n        </ScheduleBoxItem>    \n    )\n}\nexport default WorkWeekItem;","import WorkWeekItem from \"./workWeekItem\";\nimport { nanoid } from \"nanoid\";\nimport { ScheduleBox } from \"./WorkWeekTableStyled\";\n\nconst WorkWeekTable = ({items}) => {\n   \n    return (\n        <ScheduleBox>\n            {items && items.map(scheduleItem => {    \n                return <WorkWeekItem key={nanoid()} scheduleItem={scheduleItem} />\n            })}    \n        </ScheduleBox>   \n    )   \n}\n\nexport default WorkWeekTable;","import { Card, Title, FlexBox, Info, InfoLink, AddressLink, BoxInfo, Image, InfoTime } from \"./OurFriendsCardStyled\"\nimport ifEmptyString from \"components/Utils/helpers/emptyInfoString\"\nimport image from './defaultImage.jpg'\nimport WorkWeekTable from \"components/WorkWeekTable/WorkWeekTable\"\nimport { useState } from \"react\"\n\nconst OurFriendsCard = ({ card }) => {\n    const [visible, setVisible] = useState(false);\n\n    const toggle = () => {\n        setVisible(prevState => !prevState)\n    }\n    \n    const { title, url, imageUrl, workDays, addressUrl, address, phone, email } = card;\n      \n    const workDaysFrom = workDays?.filter(item => item.isOpen === true).map(item => item.from);\n    const workDaysTo = workDays?.filter(item => item.isOpen === true).map(item => item.to);  \n    \n        return (\n        <Card>\n                <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                    <Title>{title}</Title>\n                </a>\n                    <FlexBox>\n                        <div>\n                        <Image src={imageUrl ? imageUrl : image} alt=\"logo\"></Image>\n                        </div>\n                        <div>\n                            <BoxInfo onClick={toggle}>\n                            <InfoTime>\n                            {workDays ? <>\n                                Time:<br></br>\n                                {workDaysFrom[0]} - {workDaysTo[0]}\n                                {visible && <WorkWeekTable items={workDays} ></WorkWeekTable>}</> : <Info>Time:<br></br>{ifEmptyString()}</Info>}\n                            </InfoTime>\n                            </BoxInfo>\n                            <BoxInfo>\n                            <Info>Adress: </Info>\n                            {address ? <AddressLink target=\"_blank\" href={addressUrl}>{`${address.slice(0, 20)}...,`}</AddressLink> : ifEmptyString()}\n                            </BoxInfo>\n                            <BoxInfo>\n                                <Info>Email:</Info>\n                                <InfoLink href={`mailto:${email}`} target=\"_blank\" rel=\"noreferrer\">{email ? email : ifEmptyString()}</InfoLink>\n                            </BoxInfo>\n                            <BoxInfo>\n                                <Info>Phone:</Info>\n                                <InfoLink href={`tel:${phone}`} target=\"_blank\" rel=\"noreferrer\">{ phone? phone : ifEmptyString()}</InfoLink>\n                            </BoxInfo>       \n                        </div>\n                    </FlexBox>\n            </Card>\n        )         \n\n}\n\nexport default OurFriendsCard;","const onListStyles = windowSize => {\n    let gap = 0;\n    if (windowSize[0] < 768) {\n        gap = 12;\n    }\n    if (windowSize[0] >= 768) {\n        gap = 32;\n    }\n    return {\n        rowGap: gap,\n    };\n};\n\nconst onTitleStyles = windowSize => {\n    let margin = 40;\n    if (windowSize[0] >= 768) {\n        margin = 45;\n    }\n    if (windowSize[0] >= 1280) {\n        margin = 60;\n    }\n    return {\n        marginBottom: margin,\n    };\n};\n\nexport { onListStyles, onTitleStyles };\n","import axios from 'axios';\n\nexport const fetchFriends = async () => {\n    const response = await axios.get(\n        `/friends`\n    );\n    return response.data;\n};\n","import { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix'\nimport { PageSection } from 'components/Utils/Styles/basicStyle'\nimport { Title } from 'components/Utils/Styles/basicStyle'\nimport { CardsList } from 'components/CardsList/CardsList'\nimport OurFriendsCard from 'components/OurFriendsCard/OurFriendsCard'\nimport { onTitleStyles, onListStyles } from 'components/Utils/helpers/friendsResizeStyles';\nimport { fetchFriends } from 'redux/Friends/fetchFriends';\nimport { CardsLoader } from 'components/Utils/Loader/Loader';\n\nconst FriendsPage = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [friends, setFriends] = useState([])\n  const [windowSize, setWindowSize] = useState([\n    window.innerWidth,\n    window.innerHeight,\n  ]);\n\n  useEffect(() => {\n    onFirstRender()  \n  }, [])\n  \n  const onFirstRender = async () => {\n        try {\n            setIsLoading(true)\n            const results = await fetchFriends();\n            setFriends(results);\n        } catch (e) {\n            Notiflix.Notify.failure(e.message)\n        } finally {\n            setIsLoading(false)\n        }\n    }\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  });\n    \n    return <PageSection>\n      <Title style={onTitleStyles(windowSize)}>Our friends</Title>\n      {isLoading ? <CardsLoader /> : <CardsList styles={onListStyles(windowSize)}  cardsArray={friends} CardsItem={OurFriendsCard} />}        \n    </PageSection>\n}\n\nexport default FriendsPage;","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["List","styled","CardsList","cardsArray","CardsItem","styles","style","map","card","_id","nanoid","Card","Title","FlexBox","Image","Info","InfoTime","InfoLink","AddressLink","SpanInfo","BoxInfo","ScheduleBox","ScheduleBoxItem","ScheduleInfo","CurrentInfo","date","getDay","scheduleItem","useState","currentDay","setCurrentDay","day","from","to","now","Date","dayName","getWeekDay","useEffect","state","items","visible","setVisible","title","url","imageUrl","workDays","addressUrl","address","phone","email","workDaysFrom","filter","item","isOpen","workDaysTo","href","target","rel","src","alt","onClick","prevState","ifEmptyString","slice","onListStyles","windowSize","gap","rowGap","onTitleStyles","margin","marginBottom","fetchFriends","axios","response","data","isLoading","setIsLoading","friends","setFriends","window","innerWidth","innerHeight","setWindowSize","onFirstRender","results","Notiflix","message","handleWindowResize","addEventListener","removeEventListener","OurFriendsCard","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}