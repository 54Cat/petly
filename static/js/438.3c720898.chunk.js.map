{"version":3,"file":"static/js/438.3c720898.chunk.js","mappings":"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","sources":["components/CardsList/CardsListStyled.jsx","components/CardsList/CardsList.jsx","components/Utils/Styles/basicStyle.js","components/OurFriendsCard/OurFriendsCardStyled.js","components/Utils/helpers/emptyInfoString.js","components/WorkWeekTable/WorkWeekTableStyled.js","components/Utils/helpers/getWeekDay.js","components/WorkWeekTable/workWeekItem.jsx","components/WorkWeekTable/WorkWeekTable.jsx","components/OurFriendsCard/OurFriendsCard.jsx","components/Utils/helpers/friendsResizeStyles.js","pages/Friends/FriendsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\ntext-align: left;\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 40px;\n@media (min-width: 768px) {\n        row-gap: 60px;\n        column-gap: 32px;\n    }\n`\n\n","import { nanoid } from \"nanoid\"\nimport { List } from \"./CardsListStyled\"\nexport const CardsList = ({cardsArray, CardsItem, styles}) => {\n    return <List style={styles}> \n        {cardsArray && cardsArray.map(card => {\n            return <CardsItem key={card._id?? nanoid()} card={card} />\n        })}\n    </List>\n}","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: inherit;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.38;\n    width: 248px;\n    height: 38px;\n    color: #f59256;\n    background: #ffffff;\n    border: 2px solid #f59256;\n    border-radius: 40px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 8px 28px;\n    cursor: pointer;\n    &:hover,\n    &:focus {\n        color: #ff6101;\n        border-color: #ff6101;\n    }\n`;\n\nexport const Text = styled.p`\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    color: #111321;\n`;\n\nexport const Title = styled.h1`\n    font-style: normal;\n    font-weight: 700;\n    font-size: 24px;\n    padding-top: 40px;\n    text-align: center;\n\n    @media (min-width: 768px) {\n        padding-top: 90px;\n        font-size: 48px;\n    }\n\n    @media (min-width: 1280px) {\n        padding-top: 60px;\n    }\n`;\n\nexport const InputSearch = styled.input`\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    width: 236px;\n    height: 40px;\n    padding: 0 32px 0 12px;\n    color: #535353;\n    background: #ffffff;\n    box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n    border-radius: 40px;\n    border: none;\n    outline: none;\n    &:hover,\n    &:focus {\n        border: 1px solid rgba(245, 146, 86, 0.5);\n    }\n\n    @media (min-width: 480px) {\n    }\n    @media (min-width: 768px) {\n        width: 608px;\n    }\n`;\n\nexport const PageSection = styled.section`\n    text-align: center;\n    width: 280px;\n    padding: 0 5px;\n    margin: 0 auto;\n    @media (min-width: 768px) {\n        width: 704px;\n        padding: 0 17px;\n    }\n    @media (min-width: 1280px) {\n        width: 1248px;\n        padding: 0 1px;\n    }\n`;\n\n//examples for adaptive App. How use see above.\n// @media (min-width: 320px) {\n//         width: 380px;\n//     }\n//     @media (min-width: 768px) {\n//         width: 608px;\n//     }\n// @media (min-width: 1280px) {\n//         width: 608px;\n//     }\n","import styled from '@emotion/styled';\n\nconst List = styled.ol`\n    display: flex;\n    flex-wrap: wrap;\n    background-color: #fdf7f2;\n    align-items: center;\n    justify-content: center;\n    padding: 0px;\n    margin: 0px;\n`;\n\nconst Card = styled.li`\n    position: relative;\n    display: block;\n    flex-basis: 100%;\n    box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n    background-color: #ffffff;\n    border-radius: 40px;\n    padding: 12px 4px;\n\n    @media (min-width: 768px) {\n        flex-basis: calc((100% - 32px - 16px) / 2);\n        padding: 16px 4px;\n    }\n    @media (min-width: 1280px) {\n        flex-basis: calc((100% - 64px - 24px) / 3);\n    }\n`;\n\nconst Title = styled.h3`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 1.33;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration-line: underline;\n    height: 40px;\n    margin-bottom: 10px;\n    color: #f59256;\n    @media (min-width: 768px) {\n        font-size: 16px;\n        line-height: 1.37;\n        margin-bottom: 16px;\n    }\n    @media (min-width: 1280px) {\n        font-size: 20px;\n        line-height: 1.35;\n    }\n    &:hover,\n    :focus {\n        color: #ff6101;\n    }\n`;\n\nconst FlexBox = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst Image = styled.img`\n    width: 110px;\n    height: 78px;\n    margin-right: 12px;\n    @media (min-width: 768px) {\n        width: 120px;\n        height: 85px;\n        margin-right: 14px;\n    }\n    @media (min-width: 1280px) {\n        width: 158px;\n        height: 112px;\n        margin-right: 16px;\n    }\n`;\n\nconst Info = styled.p`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    color: #000000;\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 1.35;\n    }\n    @media (min-width: 1280px) {\n        font-size: 16px;\n        line-height: 1.37;\n    }\n`;\n\nconst InfoTime = styled.p`\n\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    //margin-bottom: 4px;\n    color: #000000;\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 1.35;\n    }\n    @media (min-width: 1280px) {\n        font-size: 16px;\n        line-height: 1.37;\n    }\n    &:hover,\n    :focus {\n        color: #f59256;\n    }\n`;\n\nconst InfoLink = styled.a`\n    text-decoration: none;\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    color: #000000;\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 1.35;\n    }\n    @media (min-width: 1280px) {\n        font-size: 16px;\n        line-height: 1.37;\n    }\n    &:hover,\n    :focus {\n        color: #f59256;\n    }\n`;\n\nconst AddressLink = styled.a`\n    \n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    //line-height: 16px;\n    line-height: 1.33;\n    color: #000000;\n    text-decoration-line: underline;\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 19px;\n    }\n    @media (min-width: 1280px) {\n        font-size: 16px;\n        line-height: 22px;\n    }\n    &:hover,\n    :focus {\n        color: #f59256;\n    }\n`;\n\nconst SpanInfo = styled.span`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    text-decoration: none;\n    color: #000000;\n\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 1.35;\n    }\n    @media (min-width: 1280px) {\n        font-size: 16px;\n        line-height: 1.37;\n    }\n`;\n\nconst BoxInfo = styled.div`\n    // margin-bottom: 4px;\n    :not(:last-child) {\n        margin-bottom: 4px;\n    }\n    @media (min-width: 768px) {\n        :not(:last-child) {\n        margin-bottom: 8px;\n    }\n    }\n    @media (min-width: 1280px) {\n        :not(:last-child) {\n        margin-bottom: 12px;\n    }\n    }\n    // &:last-child {\n    //     margin-bottom: 0px;\n    // }\n    \n`;\n\n\nexport {\n    List,\n    Card,\n    Title,\n    FlexBox,\n    Info,\n    InfoLink,\n    AddressLink,\n    BoxInfo,\n    SpanInfo,\n    Image,\n    InfoTime\n};\n","import { SpanInfo } from 'components/OurFriendsCard/OurFriendsCardStyled';\n\nconst ifEmptyString = () => <SpanInfo>------------------</SpanInfo>;\n\nexport default ifEmptyString;\n","import styled from '@emotion/styled';\n\nconst ScheduleBox = styled.div`\nposition: absolute;\nz-index: 2;\nleft: 178px;\ntop: 114px;\nbottom: 20px;\nwidth: 120px;\nheight: 140px;\npadding: 12px;\n\nbackground: #FFFFFF;\nborder: 1px solid #F59256;\nbox-shadow: 4px 4px 8px rgba(0, 0, 0, 0.25);\nborder-radius: 8px;\n`\n\n// const CurrentBoxItem = styled.div`\n// display: flex;\n// //padding: 4px;\n// justify-content: space-between;\n// text-align: center;\n// margin-bottom: 4px;\n// //border: 1px solid #F59256;\n// &:last-child{\n//     margin-bottom: 0px;\n// }\n// `\n\nconst ScheduleBoxItem = styled.div`\n\ndisplay: flex;\njustify-content: space-between;\ntext-align: center;\nmargin-bottom: 4px;\n&:last-child{\n    margin-bottom: 0px;\n}\n`\n\nconst ScheduleInfo = styled.p`\nfont-family: 'Manrope';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 12px;\nline-height: 1.33;\ncolor: #000000;\n`\nconst CurrentInfo = styled.p`\nfont-family: 'Manrope';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 12px;\nline-height: 1.33;\ncolor: #F59256;\n`\nexport {\n    ScheduleBox,\n    ScheduleInfo,\n    ScheduleBoxItem,\n    CurrentInfo\n}","function getWeekDay(date) {\n            let days = ['SU', 'MN', 'TU', 'WE', 'TH', 'FR', 'SA'];\n\n            return days[date.getDay()];\n}\n\nexport default getWeekDay","import { ScheduleBoxItem, ScheduleInfo, CurrentInfo } from \"./WorkWeekTableStyled\";\nimport getWeekDay from \"components/Utils/helpers/getWeekDay\";\nimport { useState, useEffect } from \"react\";\n\nconst WorkWeekItem = ({ scheduleItem }) => {\n    const [currentDay, setCurrentDay] = useState(false);\n    const { day, from, to } = scheduleItem;\n    let now = new Date();\n    let dayName = getWeekDay(now)\n\n    useEffect(() => {\n        if (dayName === day) {\n            setCurrentDay(state => state = true)\n        }   \n    }, [day, dayName])\n\n    return (\n        currentDay ?\n        <ScheduleBoxItem>\n            <CurrentInfo >{day}</CurrentInfo>\n            <CurrentInfo >{`${from} - ${to}`}</CurrentInfo>\n        </ScheduleBoxItem>\n        : <ScheduleBoxItem>\n            <ScheduleInfo >{day}</ScheduleInfo>\n            <ScheduleInfo >{`${from} - ${to}`}</ScheduleInfo>\n        </ScheduleBoxItem>    \n    )\n}\nexport default WorkWeekItem;","import WorkWeekItem from \"./workWeekItem\";\nimport { nanoid } from \"nanoid\";\nimport { ScheduleBox } from \"./WorkWeekTableStyled\";\n\n\n\nconst WorkWeekTable = ({items}) => {\n   \n    return (\n        <ScheduleBox>\n            {items && items.map(scheduleItem => {    \n                return <WorkWeekItem key={nanoid()} scheduleItem={scheduleItem} />\n            })}    \n        </ScheduleBox>   \n    )   \n}\n\nexport default WorkWeekTable;","import { Card, Title, FlexBox, Info, InfoLink, AddressLink, BoxInfo, Image, InfoTime } from \"./OurFriendsCardStyled\"\nimport ifEmptyString from \"components/Utils/helpers/emptyInfoString\"\nimport image from './defaultImage.jpg'\nimport WorkWeekTable from \"components/WorkWeekTable/WorkWeekTable\"\nimport { useState } from \"react\"\n\n\n\nconst OurFriendsCard = ({ card }) => {\n    const [visible, setVisible] = useState(false);\n\n    const toggle = () => {\n        setVisible(prevState => !prevState)\n    }\n    \n    const { title, url, imageUrl, workDays, addressUrl, address, phone, email } = card;\n      \n    const workDaysFrom = workDays?.filter(item => item.isOpen === true).map(item => item.from);\n    const workDaysTo = workDays?.filter(item => item.isOpen === true).map(item => item.to);  \n    \n        return (\n        <Card>\n                <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                    <Title>{title}</Title>\n                </a>\n                    <FlexBox>\n                        <div>\n                        <Image src={imageUrl ? imageUrl : image} alt=\"logo\"></Image>\n                        </div>\n                        <div>\n                            <BoxInfo onClick={toggle}>\n                            <InfoTime>\n                            {workDays ? <>\n                                Time:<br></br>\n                                {workDaysFrom[0]} - {workDaysTo[0]}\n                                {visible && <WorkWeekTable items={workDays} ></WorkWeekTable>}</> : <Info>Time:<br></br>{ifEmptyString()}</Info>}\n                            </InfoTime>\n                            </BoxInfo>\n                            <BoxInfo>\n                            <Info>Adress: </Info>\n                            {address ? <AddressLink href={addressUrl}>{`${address.slice(0, 20)}...,`}</AddressLink> : ifEmptyString()}\n                            </BoxInfo>\n                            <BoxInfo>\n                                <Info>Email:</Info>\n                                <InfoLink href={`mailto:${email}`} target=\"_blank\" rel=\"noreferrer\">{email ? email : ifEmptyString()}</InfoLink>\n                            </BoxInfo>\n                            <BoxInfo>\n                                <Info>Phone:</Info>\n                                <InfoLink href={`tel:${phone}`} target=\"_blank\" rel=\"noreferrer\">{ phone? phone : ifEmptyString()}</InfoLink>\n                            </BoxInfo>       \n                        </div>\n                    </FlexBox>\n            </Card>\n        )         \n\n}\n\nexport default OurFriendsCard;","const onListStyles = windowSize => {\n    let gap = 0;\n    if (windowSize[0] < 768) {\n        gap = 12;\n    }\n    if (windowSize[0] >= 768) {\n        gap = 32;\n    }\n    return {\n        rowGap: gap,\n    };\n};\n\nconst onTitleStyles = windowSize => {\n    let margin = 40;\n    if (windowSize[0] >= 768) {\n        margin = 45;\n    }\n    if (windowSize[0] >= 1280) {\n        margin = 60;\n    }\n    return {\n        marginBottom: margin,\n    };\n};\n\nexport { onListStyles, onTitleStyles };\n","import { useState, useEffect } from 'react';\nimport { PageSection } from 'components/Utils/Styles/basicStyle'\nimport { Title } from 'components/Utils/Styles/basicStyle'\nimport { CardsList } from 'components/CardsList/CardsList'\nimport OurFriendsCard from 'components/OurFriendsCard/OurFriendsCard'\nimport friends from 'data/sponsors.json'\nimport { onTitleStyles, onListStyles } from 'components/Utils/helpers/friendsResizeStyles';\n\nconst FriendsPage = () => {\n  const [windowSize, setWindowSize] = useState([\n    window.innerWidth,\n    window.innerHeight,\n  ]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  });\n    \n    return <PageSection>\n        <Title style={onTitleStyles(windowSize)}>Our friend</Title>\n        <CardsList styles={onListStyles(windowSize)}  cardsArray={friends} CardsItem={OurFriendsCard} />\n    </PageSection>\n}\n\nexport default FriendsPage;"],"names":["List","styled","CardsList","cardsArray","CardsItem","styles","style","map","card","_id","nanoid","Title","InputSearch","PageSection","Card","FlexBox","Image","Info","InfoTime","InfoLink","AddressLink","SpanInfo","BoxInfo","ScheduleBox","ScheduleBoxItem","ScheduleInfo","CurrentInfo","date","getDay","scheduleItem","useState","currentDay","setCurrentDay","day","from","to","now","Date","dayName","getWeekDay","useEffect","state","items","visible","setVisible","title","url","imageUrl","workDays","addressUrl","address","phone","email","workDaysFrom","filter","item","isOpen","workDaysTo","href","target","rel","src","alt","onClick","prevState","ifEmptyString","slice","onListStyles","windowSize","gap","rowGap","onTitleStyles","margin","marginBottom","window","innerWidth","innerHeight","setWindowSize","handleWindowResize","addEventListener","removeEventListener","friends","OurFriendsCard"],"sourceRoot":""}