{"version":3,"file":"static/js/713.feb45382.chunk.js","mappings":"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","sources":["components/Modals/ModalAddsPet/AddsPetForm/AddsPetModalStyled.js","components/Datapicker/Datapicker.jsx","components/Utils/helpers/formatNewsDate.js","components/UserData/UserDataItemStyle.jsx","components/UserData/UserDataItem.jsx","components/UserData/UserAvatarStyle.jsx","components/UserData/UserAvatar.jsx","components/Logout/Logout.styled.jsx","components/Logout/Logout.jsx","components/UserData/UserDataStyle.jsx","components/UserData/UserData.jsx","components/Pets/PetsItem/PetsItem.styled.jsx","components/Pets/PetsItem/PetsItem.jsx","components/Pets/PetsList/PetsList.jsx","components/Pets/PetsData/PetsDataStyled.jsx","components/Pets/PetsData/PetsData.jsx","pages/User/UserPageStyled.jsx","components/ButtonAddsPet/BtnAddsPetStyled.js","components/Modals/ModalAddsPet/steps/StepOne.jsx","components/Modals/ModalAddsPet/steps/stepTwo.jsx","components/Modals/ModalAddsPet/AddsPetForm/AddsPetForm.jsx","components/Modals/ModalAddsPet/AddsPetForm/Modal.jsx","components/ButtonAddsPet/ButtonAddsPet.jsx","pages/User/UserPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\nimport { Form, Field } from 'formik';\nimport { DatePickerField } from 'components/Datapicker/Datapicker';\n\nexport const StyledPicker = styled(DatePickerField)`\n    display: block;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.35;\n\n    cursor: pointer;\n    width: 196px;\n    height: 18px;\n    color: rgba(17, 17, 17, 0.6);\n    margin-top: 8px;\n    padding: 11px 14px;\n    background: #fdf7f2;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 40px;\n\n    :active,\n    :hover,\n    :focus {\n        outline: 0;\n        outline-offset: 0;\n        border: 2px solid #ff6101;\n    }\n\n    &::placeholder {\n        font-weight: 400;\n        font-size: 14px;\n        line-height: 1.35;\n        color: rgba(27, 27, 27, 0.6);\n\n        @media (min-width: 768px) {\n            font-size: 16px;\n            line-height: 1.62;\n            color: rgba(17, 17, 17, 0.6);\n        }\n    }\n    \n    @media (min-width: 768px) {\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 1.6;\n        padding: 16px 10px;\n        width: 416px;\n        height: 22px;\n        margin-top: 12px;\n    }\n`;\n\nexport const Overlay = styled.div`\n    overflow-y: scroll;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    padding: 99px auto;\n    justify-content: center;\n    align-items: center;\n    background: rgba(17, 17, 17, 0.6);\n    z-index: 1200;\n`;\n\nexport const ModalItem = styled.div`\n    position: relative;\n    display: block;\n    padding: 40px 20px;\n    width: 240px;\n    height: 470px;\n    background: #ffffff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n\n    @media (min-width: 768px) {\n        padding: 40px 80px;\n        width: 448px;\n        height: 510px;\n    }\n`;\n\nexport const ModalItemTwo = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    padding: 40px 20px;\n    width: 240px;\n    height: 590px;\n    background: #ffffff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n\n    @media (min-width: 768px) {\n        padding: 40px auto;\n        width: 608px;\n        height: 590px;\n    }\n`;\n\nexport const TitleItemTwo = styled.h4`\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.37;\n    text-align: center;\n    margin-bottom: 20px;\n    color: #111111;\n\n    @media (min-width: 768px) {\n        font-size: 20px;\n        line-height: 1.2;\n        letter-spacing: -0.01em;\n    }\n`;\n\nexport const TitleTwo = styled.h3`\n    margin-bottom: 20px;\n    text-align: center;\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 1.37;\n    color: #111111;\n\n    @media (min-width: 768px) {\n        font-size: 36px;\n        line-height: 1.36;\n    }\n`;\n\nexport const ButtonCloseIcon = styled(CloseIcon)`\n    cursor: pointer;\n    width: 28px;\n    height: 28px;\n    fill: rgba(17, 17, 17, 0.6);\n\n    &:hover {\n        fill: rgba(245, 146, 86, 1);\n    }\n\n    @media (min-width: 768px) {\n        width: 36px;\n        height: 36px;\n    }\n`;\n\nexport const BtnAddFileIcon = styled(AddIcon)`\n    cursor: pointer;\n    fill: rgba(17, 17, 17, 0.6);\n    width: 48px;\n    height: 48px;\n`;\n\nexport const ButtonCloseModal = styled.button`\n    position: absolute;\n    cursor: pointer;\n    top: 20px;\n    right: 20px;\n    width: 34px;\n    height: 34px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    border: none;\n    color: #111111;\n    background: #fdf7f2;\n    border-radius: 50%;\n\n    @media (min-width: 768px) {\n        width: 44px;\n        height: 44px;\n        top: 25px;\n        right: 25px;\n    }\n`;\n\nexport const Title = styled.h3`\n    margin-bottom: 40px;\n    text-align: center;\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 1.37;\n    color: #111111;\n\n    @media (min-width: 768px) {\n        font-size: 36px;\n        line-height: 1.36;\n    }\n`;\n\nexport const FormStyled = styled(Form)`\n    display: block;\n`;\n\nexport const FieldStyled = styled(Field)`\n    display: block;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.35;\n    cursor: pointer;\n    width: 196px;\n    height: 18px;\n    color: rgba(17, 17, 17, 0.6);\n    margin-top: 8px;\n    padding: 11px 14px;\n    background: #fdf7f2;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 40px;\n\n    :active,\n    :hover,\n    :focus {\n        outline: 0;\n        outline-offset: 0;\n        border: 2px solid #ff6101;\n    }\n\n    ::placeholder {\n        font-weight: 400;\n        font-size: 14px;\n        line-height: 1.35;\n        color: rgba(27, 27, 27, 0.6);\n\n        @media (min-width: 768px) {\n            font-size: 16px;\n            line-height: 1.62;\n            color: rgba(17, 17, 17, 0.6);\n        }\n    }\n\n    @media (min-width: 768px) {\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 1.6;\n        padding: 16px 10px;\n        width: 416px;\n        height: 22px;\n        margin-top: 12px;\n    }\n`;\n\nexport const FieldPhoto = styled(Field)`\n    display: none;\n    cursor: pointer;\n`;\n\nexport const AddFile = styled.label`\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    width: 208px;\n    height: 208px;\n    background: #fdf7f2;\n    border-radius: 20px;\n    margin-bottom: 20px;\n\n    @media (min-width: 768px) {\n        margin-bottom: 40px;\n        width: 184px;\n        height: 184px;\n    }\n`;\n\nexport const FieldTextarea = styled(Field)`\n    cursor: pointer;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.35;\n    display: block;\n    margin-top: 8px;\n    padding: 14px 12px;\n    width: 212px;\n    height: 76px;\n    background: #fdf7f2;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 20px;\n\n    :active,\n    :hover,\n    :focus {\n        outline: 0;\n        outline-offset: 0;\n        border: 2px solid #ff6101;\n    }\n\n    ::placeholder {\n        padding: 14px 12px;\n        font-weight: 400;\n        font-size: 14px;\n        line-height: 1.35;\n        color: rgba(27, 27, 27, 0.6);\n    }\n\n    @media (min-width: 768px) {\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 1.6;\n        margin-top: 20px;\n        padding: 16px;\n        width: 362px;\n        height: 84px;\n    }\n`;\n\nexport const LabelBox = styled.div`\n    margin-bottom: 16px;\n\n    @media (min-width: 768px) {\n        margin-bottom: 28px;\n    }\n`;\n\nexport const StyledLabel = styled.label`\n    display: block;\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 1.47;\n    color: #111111;\n\n    @media (min-width: 768px) {\n        font-size: 24px;\n        line-height: 1.1;\n    }\n`;\n\nexport const FlexBox = styled.div`\n    cursor: pointer;\n    justify-content: center;\n    text-align: center;\n    margin-top: 40px;\n    margin-left: auto;\n    margin-right: auto;\n\n    @media (min-width: 768px) {\n        flex-direction: row-reverse;\n        display: flex;\n    }\n`;\n\nexport const NextBtn = styled.button`\n    cursor: pointer;\n    display: block;\n    width: 240px;\n    height: 40px;\n    margin-bottom: 12px;\n    color: #ffffff;\n    background: #f59256;\n    border-radius: 40px;\n    border: none;\n\n    :hover,\n    :focus {\n        border: 2px solid #ff6101;\n    }\n\n    @media (min-width: 768px) {\n        width: 180px;\n        height: 44px;\n        margin-right: 20px;\n    }\n`;\n\nexport const CancelBtn = styled.button`\n    cursor: pointer;\n    margin-right: 15px;\n    display: block;\n    width: 240px;\n    height: 40px;\n    background: #ffffff;\n    border: 2px solid #f59256;\n    border-radius: 40px;\n\n    :hover,\n    :focus {\n        border: 2px solid #ff6101;\n    }\n\n    @media (min-width: 768px) {\n        width: 180px;\n        height: 44px;\n    }\n`;\n\nexport const ErrorText = styled.p`\n    font-family: 'Manrope';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 1.6;\n    color: #f59256;\n    margin-top: -20px;\n    position: absolute;\n\n    @media (min-width: 320px) {\n        margin-left: 10px;\n    }\n\n    @media (min-width: 768px) {\n        margin-top: -25px;\n    }\n`;\n","import React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport const DatePickerField = ({ ...props }) => {\n    const { setFieldValue } = useFormikContext();\n  const [field] = useField(props);\n  return (\n    <DatePicker\n      {...field}\n      {...props}\n      selected={(field.value && new Date(field.value)) || \"\"}\n      onChange={(val) => {\n        setFieldValue(field.name, val);\n      }}\n    />\n  );\n};","import { format } from 'date-fns'\n\nconst formatNewsDate = date => {\n    return format(new Date(date), 'dd/MM/yyyy');\n}\n export default formatNewsDate","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.33;\n    letter-spacing: 0.04em;\n    padding-left: 16px;\n    margin-bottom: 44px;\n\n    @media (min-width: 768px) {\n        margin: 44px 0 33px 32px;\n        padding: 0;\n    }\n    \n    @media (min-width: 1280px) {\n        padding-left: 15px;\n        margin: 0;\n        margin-bottom: 24px;\n    }\n`;\n\nexport const Lable = styled.label`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    \n    :not(:last-child) {\n        margin-bottom: 4px;\n    }\n    \n    @media (min-width: 768px) {\n        font-size: 18px;\n        line-height: 1.39;\n        letter-spacing: 0.04em;\n        margin-right: 20px;\n    }\n`;\n\nexport const Conteiner = styled.div`\n    display: flex;\n    margin-right: 12px;\n    \n    @media (min-width: 768px) {\n        margin-right: 0;\n    }\n`;\n\nexport const Input = styled.input`\n    width: 141px;\n    border-radius: 40px;\n    border: none;\n    margin-right: 9px;\n    padding: 4px 0 4px 18px;\n    outline: none;\n    \n    :focus,\n    :hover {\n        background: #fdf7f2;\n        border: 1px solid rgba(245, 146, 86, 0.5);\n    }\n\n    @media (min-width: 768px) {\n        width: 216px;\n        font-size: 18px;\n        line-height: 1.39;\n        letter-spacing: 0.04em;\n    }\n\n    @media (min-width: 1280px) {\n        margin-right: 24px;\n        margin-left: 4px;\n    }\n`;\n\nexport const ButtonCreate = styled.button`\n    display: flex;\n    align-items: center;\n    width: 26px;\n    height: 26px;\n    background: #fdf7f2;\n    backdrop-filter: blur(2px);\n    border: none;\n    border-radius: 50%;\n    cursor: pointer;\n\n    @media (min-width: 768px) {\n        justify-content: center;\n        width: 32px;\n        height: 32px;\n    }\n    \n    @media (min-width: 1280px) {\n        margin-right: 14px;\n    }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/Auth/AuthSelectors';\nimport { updateUserOperation } from '../../redux/User/userOperations';\nimport { MdCreate } from 'react-icons/md';\nimport { BsCheckLg } from 'react-icons/bs';\n\nimport {\n    ButtonCreate,\n    Input,\n    Lable,\n    Form,\n    Conteiner,\n} from './UserDataItemStyle';\n\nconst UserDataItem = () => {\n    const dispatch = useDispatch();\n    const userInState = useSelector(selectUser);\n\n    const { name, city, email, phone, birthday } = userInState.user;\n\n    useEffect(() => {\n        if (!name) {\n        return\n        }\n        setNewName(name)\n    }, [name])\n\n    useEffect(() => {\n        if (!city) {\n        return\n        }\n        setNewCity(city)\n    }, [city])\n\n    useEffect(() => {\n        if (!email) {\n        return\n        }\n        setNewEmail(email)\n    }, [email])\n\n    useEffect(() => {\n        if (!phone) {\n        return\n        }\n        setNewPhone(phone)\n    }, [phone])\n\n    useEffect(() => {\n        if (!birthday) {\n        return\n        }\n        setNewBirthday(birthday)\n    }, [birthday])\n\n    const [newName, setNewName] = useState('');\n    const [newEmail, setNewEmail] = useState('');\n    const [newBirthday, setNewBirthday] = useState('');\n    const [newPhone, setNewPhone] = useState('');\n    const [newCity, setNewCity] = useState('');\n\n    const iconCreate = <MdCreate color=\"#F59256\" className=\"icon\" />;\n    const iconCriateBlack = <MdCreate color=\"#111111\" className=\"icon\" />;\n    const iconConfirm = <BsCheckLg color=\"#F59256\" className=\"icon\" />;\n\n    const [iconName, setIconName] = useState(iconCreate);\n    const [iconEmail, setIconEmail] = useState(iconCreate);\n    const [iconBirthday, setIconBirthday] = useState(iconCreate);\n    const [iconPhone, setIconPhone] = useState(iconCreate);\n    const [iconCity, setIconCity] = useState(iconCreate);\n\n    const imputChange = e => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n            case 'Name':\n                setNewName(value);\n                break;\n            case 'Email':\n                setNewEmail(value);\n                break;\n            case 'Birthday':\n                setNewBirthday(value);\n                break;\n            case 'Phone':\n                setNewPhone(value);\n                break;\n            case 'City':\n                setNewCity(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const onFocus = e => {\n        const { name } = e.currentTarget;\n\n        switch (name) {\n            case 'Name':\n                setIconName(iconConfirm);\n                setIconEmail(iconCriateBlack);\n                setIconBirthday(iconCriateBlack);\n                setIconPhone(iconCriateBlack);\n                setIconCity(iconCriateBlack);\n                break;\n            case 'Email':\n                setIconEmail(iconConfirm);\n                setIconName(iconCriateBlack);\n                setIconBirthday(iconCriateBlack);\n                setIconPhone(iconCriateBlack);\n                setIconCity(iconCriateBlack);\n                break;\n            case 'Birthday':\n                setIconBirthday(iconConfirm);\n                setIconEmail(iconCriateBlack);\n                setIconName(iconCriateBlack);\n                setIconPhone(iconCriateBlack);\n                setIconCity(iconCriateBlack);\n                break;\n            case 'Phone':\n                setIconPhone(iconConfirm);\n                setIconBirthday(iconCriateBlack);\n                setIconEmail(iconCriateBlack);\n                setIconName(iconCriateBlack);\n                setIconCity(iconCriateBlack);\n                break;\n            case 'City':\n                setIconCity(iconConfirm);\n                setIconPhone(iconCriateBlack);\n                setIconBirthday(iconCriateBlack);\n                setIconEmail(iconCriateBlack);\n                setIconName(iconCriateBlack);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const submitChenges = e => {\n        e.preventDefault();\n        dispatch(\n            updateUserOperation({\n                newName,\n                newEmail,\n                newBirthday,\n                newPhone,\n                newCity,\n            })\n        );\n        setIconName(iconCreate);\n        setIconEmail(iconCreate);\n        setIconBirthday(iconCreate);\n        setIconPhone(iconCreate);\n        setIconCity(iconCreate);\n    };\n\n    return (\n        <Form onSubmit={submitChenges}>\n            <Lable>\n                {' '}\n                Name:\n                <Conteiner>\n                    <Input\n                        autoComplete=\"off\"\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"Name\"\n                        value={newName}\n                        onChange={imputChange}\n                        onFocus={onFocus}\n                    />\n                    <ButtonCreate>{iconName}</ButtonCreate>\n                </Conteiner>\n            </Lable>\n            <Lable>\n                {' '}\n                Email:\n                <Conteiner>\n                    <Input\n                        autoComplete=\"off\"\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"Email\"\n                        value={newEmail}\n                        onChange={imputChange}\n                        onFocus={onFocus}\n                    />\n                    <ButtonCreate disabled={true}>{iconEmail}</ButtonCreate>\n                </Conteiner>\n            </Lable>\n            <Lable>\n                {' '}\n                Birthday:\n                <Conteiner>\n                    <Input\n                        autoComplete=\"off\"\n                        type=\"text\"\n                        id=\"birthday\"\n                        name=\"Birthday\"\n                        value={newBirthday}\n                        onChange={imputChange}\n                        onFocus={onFocus}\n                    />\n                    <ButtonCreate type=\"submit\">{iconBirthday}</ButtonCreate>\n                </Conteiner>\n            </Lable>\n            <Lable>\n                {' '}\n                Phone:\n                <Conteiner>\n                    <Input\n                        autoComplete=\"off\"\n                        type=\"text\"\n                        id=\"phone\"\n                        name=\"Phone\"\n                        value={newPhone}\n                        onChange={imputChange}\n                        onFocus={onFocus}\n                    />\n                    <ButtonCreate type=\"submit\">{iconPhone}</ButtonCreate>\n                </Conteiner>\n            </Lable>\n            <Lable>\n                {' '}\n                City:\n                <Conteiner>\n                    <Input\n                        autoComplete=\"off\"\n                        type=\"text\"\n                        id=\"city\"\n                        name=\"City\"\n                        value={newCity}\n                        onChange={imputChange}\n                        onFocus={onFocus}\n                    />\n                    <ButtonCreate type=\"submit\">{iconCity}</ButtonCreate>\n                </Conteiner>\n            </Lable>\n        </Form>\n    );\n};\n\nexport default UserDataItem;\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n    margin-bottom: 32px;\r\n    \r\n    @media (min-width: 768px) {\r\n        margin: 24px 40px 24px 52px;\r\n    }\r\n\r\n    @media (min-width: 1280px) {\r\n        width: 100%;\r\n        margin: 0;\r\n        margin-bottom: 36px;\r\n    }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    filter: drop-shadow(0px 4px 14px rgba(0, 0, 0, 0.11));\r\n    margin: 0 auto 12px auto;\r\n    border-radius: 50%;\r\n    width: 233px;\r\n    height: 233px;\r\n    object-fit: cover;\r\n\r\n    @media (min-width: 768px) {\r\n        margin-bottom: 8px;\r\n    }\r\n\r\n    @media (min-width: 1200px) {\r\n        margin: 20px auto 0 auto;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background-color: transparent;\r\n    border: none;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    line-height: 1.83;\r\n    letter-spacing: 0.04em;\r\n    background-color: inherit;\r\n    margin-left: auto;\r\n    margin-right: 24px;\r\n    padding: 0;\r\n    cursor: pointer;\r\n\r\n    @media (min-width: 768px) {\r\n        margin-right: 0;\r\n    }\r\n\r\n    @media (min-width: 1280px) {\r\n        margin-right: 16px;\r\n        margin-top: -24px;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    display: none;\r\n`;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useRef, useState } from 'react';\r\nimport { BsCheckLg } from 'react-icons/bs';\r\nimport { IoIosCamera } from 'react-icons/io';\r\nimport { selectUser } from 'redux/Auth/AuthSelectors';\r\nimport { updateUserOperation } from '../../redux/User/userOperations';\r\nimport { Image, Label, Container, Input, Button } from './UserAvatarStyle';\r\n\r\nexport const UserAvatar = () => {\r\n    const userInState = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n    const ref = useRef();\r\n\r\n    const { avatarURL } = userInState.user;\r\n\r\n    const [uploadAvatar, setUploadAvatar] = useState(avatarURL);\r\n    const [addButton, setAddButton] = useState(false);\r\n\r\n    const addAvatar = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(updateUserOperation({ uploadAvatar }));\r\n\r\n        setAddButton(false);\r\n    };\r\n\r\n    const onChange = e => {\r\n        const [file] = e.target.files;\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            const { current } = ref;\r\n            current.file = file;\r\n            reader.onload = e => {\r\n                current.src = e.target.result;\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        const form = document.getElementById('id');\r\n        const formData = new FormData(form);\r\n        formData.append('avatar', file.name);\r\n\r\n        for (const [key, value] of formData) {\r\n            setUploadAvatar({ key, value });\r\n        }\r\n\r\n        dispatch(updateUserOperation({ uploadAvatar }));\r\n\r\n        setAddButton(true);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Image\r\n                ref={ref}\r\n                src={uploadAvatar}\r\n                alt=\"my portret\"\r\n                width=\"233\"\r\n                height=\"233\"\r\n            />\r\n            <form id=\"id\" onChange={onChange}>\r\n                {addButton && (\r\n                    <Button onClick={addAvatar}>\r\n                        {' '}\r\n                        <BsCheckLg color=\"#F59256\" className=\"icon\" />\r\n                        add\r\n                    </Button>\r\n                )}\r\n                <Label htmlFor=\"avatar\">\r\n                    <IoIosCamera fill=\"#F59256\" className=\"icon-edit\" />\r\n                    Edit photo\r\n                    <Input\r\n                        id=\"avatar\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        multiple={false}\r\n                    />\r\n                </Label>\r\n            </form>\r\n        </Container>\r\n    );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonLogout = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 1.37;\r\n    letter-spacing: 0.04em;\r\n    color: rgba(17, 17, 17, 0.6);\r\n    border: none;\r\n    margin-left: auto;\r\n    padding: 0;\r\n    margin-right: 12px;\r\n    cursor: pointer;\r\n\r\n    :hover,\r\n    :focus {\r\n        color: #f59256;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        margin-left: 32px;\r\n    }\r\n    \r\n    @media (min-width: 768px) {\r\n        margin-bottom: 18px;\r\n        margin-left: 15px;\r\n    }\r\n`;\r\n","import { useDispatch } from 'react-redux';\nimport { TbLogout } from 'react-icons/tb';\nimport { ButtonLogout } from './Logout.styled';\nimport { loggedOut } from '../../redux/Auth/AuthOperations';\n\nexport const UserLogout = () => {\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(loggedOut());\n    };\n    return (\n        <>\n            <ButtonLogout\n                onClick={() => {\n                    handleClick();\n                }}\n                type=\"submit\"\n            >\n                <TbLogout color=\"#F59256\" className=\"icon-logout\" />\n                Log Out\n            </ButtonLogout>\n        </>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const UserCard = styled.div`\n    width: 100%;\n    \n    @media (min-width: 1280px) {\n        width: 411px;\n    }\n`;\n\nexport const Text = styled.p`\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    margin-bottom: 20px;\n\n    @media (min-width: 768px) {\n        font-size: 28px;\n        margin-bottom: 40px;\n        padding-left: 32px;\n    }\n\n    @media (min-width: 1280px) {\n        margin-bottom: 24px;\n    }\n`;\n\nexport const FormContainer = styled.div`\n    @media (min-width: 768px) {\n        padding-left: 32px;\n    }\n\n    @media (min-width: 1280px) {\n        padding: 16px;\n    }\n`\n\nexport const Wrapper = styled.div`\n    background: #ffffff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 20px;\n    padding: 20px 0;\n    margin-right: auto;\n    margin-left: auto;\n\n    @media (min-width: 320px) {\n        width: 280px;\n    }\n\n    @media (min-width: 768px) {\n        position: relative;\n        // left: -32px;\n        display: flex;\n        flex-direction: row-reverse;\n        justify-content: space-between;\n        align-items: flex-start;\n        width: 768px;\n        border-radius: 0px 40px 40px 0px;\n        padding: 0;\n        margin-left: 0;\n    }\n\n    @media (min-width: 1280px) {\n        flex-direction: column;\n        width: 411px;\n        left: 0;\n    }\n`;\n\nexport const Container = styled.div`\n    margin-bottom: 32px;\n\n    @media (min-width: 768px) {\n        margin: 24px 40px 24px 52px;\n    }\n\n    @media (min-width: 1280px) {\n        width: 100%;\n        margin: 0;\n        margin-bottom: 36px;\n    }\n`;\n\nexport const Image = styled.img`\n    filter: drop-shadow(0px 4px 14px rgba(0, 0, 0, 0.11));\n    margin: 0 auto 12px auto;\n    border-radius: 50%;\n    object-fit: contain;\n\n    @media (min-width: 768px) {\n        margin-bottom: 8px;\n    }\n\n    @media (min-width: 1280px) {\n        margin: 20px auto 0 auto;\n    }\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 1.83;\n    letter-spacing: 0.04em;\n    background-color: inherit;\n    margin-left: auto;\n    margin-right: 24px;\n    padding: 0;\n    cursor: pointer;\n\n    @media (min-width: 768px) {\n        margin-right: 0;\n    }\n\n    @media (min-width: 1280px) {\n        margin-right: 16px;\n        margin-top: -24px;\n    }\n`;\n\nexport const Input = styled.input`\n    display: none;\n`;\n\nexport const ButtonLogout = styled.button`\n    display: flex;\n    align-items: center;\n    background-color: transparent;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.37;\n    letter-spacing: 0.04em;\n    color: rgba(17, 17, 17, 0.6);\n    border: none;\n    margin-left: auto;\n    padding: 0;\n    margin-right: 12px;\n    cursor: pointer;\n\n    :hover,\n    :focus {\n        color: #f59256;\n    }\n\n    @media (min-width: 768px) {\n        margin: 0;\n        padding-left: 32px;\n    }\n\n    @media (min-width: 1280px) {\n        padding-left: 16px;\n    }\n`;\n","import UserDataItem from './UserDataItem';\nimport { UserAvatar } from './UserAvatar';\nimport { UserLogout } from '../Logout/Logout';\n\nimport { Wrapper, Text, UserCard } from './UserDataStyle';\n\nconst UserData = () => {\n    return (\n        <>\n            <UserCard>\n                <Text>My information:</Text>\n                <Wrapper>\n                    <>\n                        <UserAvatar />\n                        <div>\n                            <UserDataItem />\n                            <UserLogout />\n                        </div>\n                    </>\n                </Wrapper>\n            </UserCard>\n        </>\n    );\n};\n\nexport default UserData;","import styled from '@emotion/styled';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const PetsCard = styled.div`\n    box-sizing: border-box;\n    margin: 0 auto;\n    padding: 16px 20px 40px;\n    background: #ffffff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 20px;\n\n    &:not(:last-child) {\n        margin-bottom: 20px;\n    }\n\n    @media (min-width: 320px) {\n        width: 280px;\n    }\n\n    @media (min-width: 768px) {\n        padding: 20px;\n        width: 704px;\n        display: flex;\n        border-radius: 40px;\n        margin-left: 32px;\n    }\n\n    @media (min-width: 1280px) {\n        margin-left: 0;\n        width: 821px;\n        &:not(:last-child) {\n            margin-bottom: 22px;\n        }\n    }\n`;\n\nexport const PetsImg = styled.img`\n    object-fit: cover;\n    margin-bottom: 20px;\n    border-radius: 20px;\n\n    @media (min-width: 320px) {\n        width: 240px;\n        height: 240px;\n    }\n\n    @media (min-width: 768px) {\n        width: 161px;\n        height: 161px;\n        border-radius: 40px;\n        margin-bottom: 0;\n        margin-right: 32px;\n    }\n`;\n\nexport const TextWrapper = styled.div`\n    @media (min-width: 768px) {\n        width: 471px;\n    }\n\n    @media (min-width: 1280px) {\n        width: 588px;\n    }\n`;\n\nexport const PetsName = styled.p`\n    margin-bottom: 12px;\n    position: relative;\n`;\n\nexport const CardText = styled.p`\n    &:not(:last-child) {\n        margin-bottom: 12px;\n    }\n`;\n\nexport const StyledDeleteIcon = styled(DeleteIcon)`\n    width: 16px;\n    height: 17px;\n    fill: rgba(17, 17, 17, 0.6);\n\n    &:hover {\n        fill: rgba(245, 146, 86, 1);\n    }\n\n    @media (min-width: 768px) {\n        width: 25px;\n        height: 26px;\n    }\n`;\n\nexport const DelBtn = styled.button`\n    width: 17px;\n    height: 17px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 0;\n    right: 0;\n    border: none;\n\n    @media (min-width: 768px) {\n        width: 44px;\n        height: 44px;\n        background: #fdf7f2;\n        border-radius: 50%;\n    }\n`;\n\nexport const CardTitle = styled.span`\n    font-weight: bold;\n`;\n\nexport const NoPetsTitle = styled.p`\n    color: #111111;\n    font-size: 24px;\n    font-weight: 500;\n    text-align: center;\n\n    @media (min-width: 768px) {\n        font-size: 48px;\n    }\n`","import { useDispatch } from 'react-redux';\nimport { deletePetOperation } from 'redux/Pets/petsOperations';\nimport formatNewsDate from 'components/Utils/helpers/formatNewsDate';\n\nimport {\n    PetsCard,\n    PetsImg,\n    TextWrapper,\n    PetsName,\n    CardText,\n    CardTitle,\n    DelBtn,\n    StyledDeleteIcon,\n} from './PetsItem.styled';\n\nconst PetsItem = ({ id, name, birthday, breed, comments, photoURL }) => {\n    const dispatch = useDispatch();\n\n    const onBtnDelete = () => {\n        dispatch(deletePetOperation(id));\n    };\n\n    return (\n        <PetsCard key={id}>\n            <PetsImg src={photoURL} alt=\"\" />\n            <TextWrapper>\n                <PetsName>\n                    <CardTitle>Name:</CardTitle> {name}{' '}\n                    <DelBtn type=\"button\" onClick={onBtnDelete}>\n                        <StyledDeleteIcon sx={{}} />\n                    </DelBtn>\n                </PetsName>\n                <CardText>\n                    <CardTitle>Date of birth:</CardTitle>{' '}\n                    {formatNewsDate(birthday)}\n                </CardText>\n                <CardText>\n                    <CardTitle>Breed:</CardTitle> {breed}\n                </CardText>\n                <CardText>\n                    <CardTitle>Comments:</CardTitle> {comments}\n                </CardText>\n            </TextWrapper>\n        </PetsCard>\n    );\n};\n\nexport default PetsItem;\n","import { useSelector } from 'react-redux';\nimport { getPets } from 'redux/selectors';\nimport PetsItem from 'components/Pets/PetsItem/PetsItem';\nimport { NoPetsTitle } from 'components/Pets/PetsItem/PetsItem.styled';\n\nconst PetsList = function () {\n    const pets = useSelector(getPets);\n    return (\n        <>\n            {pets.items.map(\n                ({ _id, name, birthday, breed, comments, photoURL }) => {\n                    return (\n                        <PetsItem\n                            key={_id}\n                            id={_id}\n                            name={name}\n                            birthday={birthday}\n                            breed={breed}\n                            comments={comments}\n                            photoURL={photoURL}\n                        ></PetsItem>\n                    );\n                }\n            )}\n\n            {pets.items.length === 0 && <NoPetsTitle>There are no pets yet! </NoPetsTitle>}\n        </>\n    );\n};\n\nexport default PetsList;\n","import styled from '@emotion/styled';\n\nexport const PetsWrapper = styled.div`\n    width: 100%;\n`;\n\nexport const PetsTitle = styled.h2`\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    margin-left: 20px;\n    margin-bottom: 32px;\n\n    @media (min-width: 768px) {\n        font-size: 28px;\n        margin-bottom: 24px;\n    }\n\n    @media (min-width: 1280px) {\n       margin-left: 0;\n    }\n`;\n","import PetsList from 'components/Pets/PetsList/PetsList';\n\n\nimport { PetsWrapper, PetsTitle} from './PetsDataStyled';\n\nconst PetsData = function () {\n    return (\n        <PetsWrapper>\n            <PetsTitle>My pets:</PetsTitle>\n            <PetsList />\n        </PetsWrapper>\n    );\n};\n\nexport default PetsData;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 120px;\n    row-gap: 45px;\n\n    @media (min-width: 768px) {\n        padding-top: 160px;\n        row-gap: 20px;\n    }\n\n    @media (min-width: 1280px) {\n        flex-direction: row;\n        align-items: start;\n        padding-top: 125px;\n        row-gap: 0;\n        column-gap: 32px;\n    }\n`;\n\nexport const ButtonContainer = styled.div`\n    position: absolute;\n    right: 20px;\n    top: 815px;\n\n    @media (min-width: 768px) {\n        right: 32px;\n        top: 625px;\n    }\n\n    @media (min-width: 1280px) {\n        top: 170px;\n    }\n`;","import styled from '@emotion/styled';\n\nexport const BtnBox = styled.div`\n    position: absolute;\n    right: 0;\n    bottom: 16px;\n    width: 128px;\n    height: 40px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    @media (min-width: 768px) {\n        bottom: 444px;\n    }\n\n    @media (min-width: 768px) {\n        bottom: 8px;\n    }\n`;\n\nexport const TextBtn = styled.p`\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 27px;\n    color: #111111;\n    margin-right: 15px;\n`;\n\nexport const BtnAddPet = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 40px;\n    height: 40px;\n    background: #f59256;\n    color: #ffffff;\n    border: none;\n    outline: none;\n    border-radius: 50%;\n    font-size: 50px;\n    cursor: pointer;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n    StyledPicker,\n    ButtonCloseModal,\n    ButtonCloseIcon,\n    Title,\n    ErrorText,\n    ModalItem,\n    FlexBox,\n    StyledLabel,\n    FormStyled,\n    FieldStyled,\n    CancelBtn,\n    NextBtn,\n    LabelBox,\n} from '../AddsPetForm/AddsPetModalStyled';\nimport * as yup from 'yup';\nconst cyrillic = /[A-Za-z]/;\nconst validationSchema = yup.object({\n    name: yup\n        .string()\n        .min(2)\n        .max(16)\n        .required()\n        .matches(cyrillic, 'only Latin letters'),\n    birthday: yup.string().required(),\n    breed: yup\n        .string()\n        .min(2)\n        .max(16)\n        .required()\n        .matches(cyrillic, 'only Latin letters'),\n});\n\nconst StepOne = props => {\n    const FormError = ({ name }) => {\n        return (\n            <ErrorMessage\n                name={name}\n                render={message => <ErrorText>{message}</ErrorText>}\n            />\n        );\n    };\n\n    const handleSubmit = data => {\n        props.next(data);\n    };\n\n    const { onClose } = props;\n    return (\n        <Formik\n            initialValues={props.data}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n        >\n            {() => (\n                <ModalItem>\n                    <ButtonCloseModal type=\"button\" onClick={() => onClose()}>\n                        <ButtonCloseIcon />\n                    </ButtonCloseModal>\n                    <FormStyled>\n                        <Title>Add pet</Title>\n                        <LabelBox>\n                            <StyledLabel htmlFor=\"name\">\n                                Name pet\n                                <FieldStyled\n                                    type=\"text\"\n                                    name=\"name\"\n                                    placeholder=\"Type name pet\"\n                                />\n                            </StyledLabel>\n                        </LabelBox>\n                        <FormError name=\"name\" />\n                        <LabelBox>\n                            <StyledLabel htmlFor=\"birthday\">\n                                Date of birth\n                                <StyledPicker\n                                    type=\"text\"\n                                    name=\"birthday\"\n                                    placeholder=\"Type date of birth\"\n                                />\n                            </StyledLabel>\n                        </LabelBox>\n                        <FormError name=\"birthday\" />\n\n                        <LabelBox>\n                            <StyledLabel htmlFor=\"breed\">\n                                Breed\n                                <FieldStyled\n                                    type=\"text\"\n                                    name=\"breed\"\n                                    placeholder=\"Type breed\"\n                                />\n                            </StyledLabel>\n                        </LabelBox>\n                        <FormError name=\"breed\" />\n                        <FlexBox>\n                            <NextBtn type=\"submit\">Next</NextBtn>\n                            <CancelBtn type=\"button\" onClick={() => onClose()}>\n                                Cancel\n                            </CancelBtn>\n                        </FlexBox>\n                    </FormStyled>\n                </ModalItem>\n            )}\n        </Formik>\n    );\n};\nexport default StepOne;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useState } from 'react';\n\nimport {\n    LabelBox,\n    TitleItemTwo,\n    BtnAddFileIcon,\n    ErrorText,\n    AddFile,\n    ButtonCloseModal,\n    ButtonCloseIcon,\n    ModalItemTwo,\n    FlexBox,\n    FormStyled,\n    TitleTwo,\n    FieldPhoto,\n    StyledLabel,\n    FieldTextarea,\n    NextBtn,\n    CancelBtn,\n} from '../AddsPetForm/AddsPetModalStyled';\nimport { useDispatch } from 'react-redux';\nimport { addPetOperation } from 'redux/Pets/petsOperations';\n\nconst validationSchema = yup.object({\n    comments: yup.string().min(8).max(120).required(),\n});\n\nconst StepTwo = ({ data, prev, onClose }) => {\n    const FormError = ({ name }) => {\n        return (\n            <ErrorMessage\n                name={name}\n                render={message => <ErrorText>{message}</ErrorText>}\n            />\n        )\n    }\n    \n    const dispatch = useDispatch();\n    \n    const [file, setFile] = useState(null); \n    \n    const handleChange = (event) => {\n       setFile(event.target.files[0]);\n    }\n\n    const handleSubmit = (values, { resetForm }) => {\n        let formData = new FormData();\n        for (let value in values) {\n            formData.append(value, values[value]);\n            \n        }\n\n        formData.append(\"myPetsPhoto\", file)\n        \n        for (let property of formData.entries()) {\n            console.log(property[0], property[1]);\n        }\n        dispatch(addPetOperation(formData));\n        resetForm();\n        onClose();    \n    }\n\n\n\n    return (\n        <Formik\n            \n            initialValues={data}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n        >\n            {({ values }) => (\n                <ModalItemTwo>\n                    <ButtonCloseModal type=\"button\" onClick={() => onClose()}>\n                        <ButtonCloseIcon />\n                    </ButtonCloseModal>\n                    <FormStyled>\n                        <TitleTwo>Add pet</TitleTwo>\n                        <TitleItemTwo>Add photo and some comments</TitleItemTwo>\n\n                        <AddFile htmlFor=\"myPetsPhoto\">\n                            {file ? <p>File added success</p>:<BtnAddFileIcon />}\n\n                            <FieldPhoto id=\"myPetsPhoto\" type=\"file\" name=\"myPetsPhoto\" onChange={handleChange} />   \n                        </AddFile>\n                        <FormError name=\"myPetsPhoto\" />\n                        <LabelBox>\n                            <StyledLabel htmlFor=\"comments\">\n                                Comments\n                                <FieldTextarea\n                                    type=\"text\"\n                                    name=\"comments\"\n                                    placeholder=\"Type comments\"\n                                    as=\"textarea\"\n                                />\n                            </StyledLabel>\n                        </LabelBox>\n                        <FormError name=\"comments\" />\n                        <FlexBox>\n                            <NextBtn type=\"submit\">Done</NextBtn>\n                            <CancelBtn\n                                type=\"button\"\n                                onClick={() => prev(values)}\n                            >\n                                Back\n                            </CancelBtn>\n                        </FlexBox>\n                    </FormStyled>\n                </ModalItemTwo>\n            )}\n        </Formik>\n    );\n};\n\n      export default StepTwo\n","import StepOne from '../steps/StepOne';\nimport StepTwo from '../steps/stepTwo';\nimport React, { useState } from 'react';\n\nconst AddsPetForm = ({ onClose }) => {\n    const [data, setData] = useState({\n        name: '',\n        birthday: '',\n        breed: '',\n        comments: '',\n    });\n\n    const [currentStep, setCurrentStep] = useState(0);\n\n    const handleNextStep = (newData, final = false) => {\n        setData(prev => ({ ...prev, ...newData }));\n        if (final) {\n            return;\n        }\n\n        setCurrentStep(prev => prev + 1);\n    };\n\n    const handlePrevStep = newData => {\n        setData(prev => ({ ...prev, ...newData }));\n        setCurrentStep(prev => prev - 1);\n    };\n    \n    const steps = [\n        <StepOne next={handleNextStep} data={data} onClose={onClose} />,\n        <StepTwo prev={handlePrevStep} data={data} onClose={onClose} />,\n    ];\n\n    return <div>{steps[currentStep]}</div>;\n};\n\nexport default AddsPetForm;\n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Overlay } from \"./AddsPetModalStyled\";\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nconst Modal = ({children, onClose}) => {\n  \n  useEffect(() => {\n   document.addEventListener(\"keydown\", closeModal); \n    \n    return () => { document.removeEventListener(\"keydown\", closeModal); };\n  })\n  \n  const closeModal = ({ target, currentTarget, code }) => {\n    if (target === currentTarget || code === \"Escape\") {\n      onClose();\n    }  \n  }\n\nreturn createPortal(\n       <Overlay onClick={closeModal} >\n           {children}\n       </Overlay>,\n       modalRoot\n     )\n}\n\nexport default Modal;","import { BtnBox, TextBtn, BtnAddPet } from './BtnAddsPetStyled';\nimport AddsPetForm from 'components/Modals/ModalAddsPet/AddsPetForm/AddsPetForm';\n\nimport Modal from 'components/Modals/ModalAddsPet/AddsPetForm/Modal';\nimport { useState } from 'react';\n\nconst ButtonAddsPet = () => {\n    const [modalOpen, setModalOpen] = useState(false);\n    const openModal = () => {\n        setModalOpen(true);\n    };\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    return (\n        <>\n            <BtnBox>\n                <TextBtn>Add pet</TextBtn>\n                <BtnAddPet type=\"button\" onClick={openModal}>\n                    +\n                </BtnAddPet>\n            </BtnBox>\n            {modalOpen && (\n                <Modal onClose={closeModal}>\n                    <AddsPetForm onClose={closeModal}></AddsPetForm>\n                </Modal>\n            )}\n        </>\n    );\n};\nexport default ButtonAddsPet;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getUserOperation } from 'redux/User/userOperations';\nimport { isLoading } from 'redux/Auth/AuthSelectors'\n\nimport UserData from 'components/UserData/UserData';\nimport PetsData from 'components/Pets/PetsData/PetsData';\nimport { Container, ButtonContainer } from './UserPageStyled';\nimport ButtonAddsPet from 'components/ButtonAddsPet/ButtonAddsPet';\n\nconst UserPage = () => {    \n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getUserOperation());\n    }, [dispatch]);\n\n    const isLogIn = useSelector(isLoading);\n\n    return (\n        !isLogIn && (\n            <>\n                <Container>\n                    <ButtonContainer>\n                        <ButtonAddsPet />\n                    </ButtonContainer>\n                    <UserData />\n                    <PetsData />\n                </Container>\n            </>\n        )\n    );\n};\n\nexport default UserPage;\n"],"names":["StyledPicker","styled","_ref","props","Object","assign","_objectDestructuringEmpty","setFieldValue","useFormikContext","_useField","useField","field","_slicedToArray","_jsx","DatePicker","_objectSpread","selected","value","Date","onChange","val","name","_templateObject","_taggedTemplateLiteral","Overlay","_templateObject2","ModalItem","_templateObject3","ModalItemTwo","_templateObject4","TitleItemTwo","_templateObject5","TitleTwo","_templateObject6","ButtonCloseIcon","CloseIcon","_templateObject7","BtnAddFileIcon","AddIcon","_templateObject8","ButtonCloseModal","_templateObject9","Title","_templateObject10","FormStyled","Form","_templateObject11","FieldStyled","Field","_templateObject12","FieldPhoto","_templateObject13","AddFile","_templateObject14","FieldTextarea","_templateObject15","LabelBox","_templateObject16","StyledLabel","_templateObject17","FlexBox","_templateObject18","NextBtn","_templateObject19","CancelBtn","_templateObject20","ErrorText","_templateObject21","date","format","Lable","Conteiner","Input","ButtonCreate","dispatch","useDispatch","_userInState$user","useSelector","selectUser","user","city","email","phone","birthday","useEffect","setNewName","setNewCity","setNewEmail","setNewPhone","setNewBirthday","_useState","useState","_useState2","newName","_useState3","_useState4","newEmail","_useState5","_useState6","newBirthday","_useState7","_useState8","newPhone","_useState9","_useState10","newCity","iconCreate","MdCreate","color","className","iconCriateBlack","iconConfirm","BsCheckLg","_useState11","_useState12","iconName","setIconName","_useState13","_useState14","iconEmail","setIconEmail","_useState15","_useState16","iconBirthday","setIconBirthday","_useState17","_useState18","iconPhone","setIconPhone","_useState19","_useState20","iconCity","setIconCity","imputChange","e","_e$currentTarget","currentTarget","onFocus","_jsxs","onSubmit","preventDefault","updateUserOperation","children","autoComplete","type","id","disabled","Container","Image","Button","Label","UserAvatar","userInState","ref","useRef","avatarURL","uploadAvatar","setUploadAvatar","addButton","setAddButton","src","alt","width","height","file","target","files","reader","FileReader","current","onload","result","readAsDataURL","form","document","getElementById","formData","FormData","append","_step","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","key","err","f","onClick","htmlFor","IoIosCamera","fill","accept","multiple","ButtonLogout","UserLogout","_Fragment","loggedOut","TbLogout","UserCard","Text","Wrapper","UserDataItem","PetsCard","PetsImg","TextWrapper","PetsName","CardText","StyledDeleteIcon","DeleteIcon","DelBtn","CardTitle","NoPetsTitle","breed","comments","photoURL","deletePetOperation","sx","formatNewsDate","pets","getPets","items","map","_id","PetsItem","length","PetsWrapper","PetsTitle","PetsList","ButtonContainer","BtnBox","TextBtn","BtnAddPet","cyrillic","validationSchema","yup","min","max","required","matches","FormError","ErrorMessage","render","message","onClose","Formik","initialValues","data","next","placeholder","prev","_ref2","setFile","handleChange","event","values","_ref3","resetForm","entries","property","console","log","addPetOperation","_ref4","as","setData","currentStep","setCurrentStep","steps","StepOne","newData","final","arguments","undefined","StepTwo","modalRoot","addEventListener","closeModal","removeEventListener","code","createPortal","modalOpen","setModalOpen","Modal","AddsPetForm","getUserOperation","isLoading","ButtonAddsPet","UserData","PetsData"],"sourceRoot":""}