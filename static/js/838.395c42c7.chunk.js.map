{"version":3,"file":"static/js/838.395c42c7.chunk.js","mappings":"0eAQaA,EAAYC,EAAAA,EAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,i8CAKXC,EAUKC,EAUDC,EAMKC,EAMDC,EAQKC,E,sECnD5BC,E,QAAgBT,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mQ,oKCG1BQ,EAA0BC,EAAAA,KAAaC,MAAM,CACtDC,MAAOF,EAAAA,KAEFG,QAPW,2DAOU,iBACrBA,UACAC,YACAC,IAAI,IACJC,IAAI,IACJC,SAAS,kBACTL,MAAM,mBACXM,SAAUR,EAAAA,KAELG,QAbL,sHAayB,0BACpBA,QAAQ,eAAgB,oCACxBI,SAAS,kBACTF,IAAI,EAAG,wBACPC,IAAI,GAAI,yBACRG,KAAK,wBAEVC,QAASV,EAAAA,KAEJO,SAAS,sCACTI,MAAM,CAACX,EAAAA,GAAQ,YAAa,MAAO,yBAI/BY,EAA0BZ,EAAAA,KAAaC,MAAM,CACtDY,KAAMb,EAAAA,KAAaO,SAAS,kBAC5BO,MAAOd,EAAAA,KAEFG,QANW,eAMU,yBACrBC,UAAU,yCACVC,IAAI,GACJE,SAAS,8BACdQ,KAAMf,EAAAA,KAEDO,WACAF,IAAI,EAAG,wBACPC,IAAI,IACJH,QAdU,2BAcU,2B,6BCxChBa,EAAU3B,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ssBA+BpB0B,EAAa5B,EAAAA,EAAAA,IAAU6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,grBAmCvB4B,GANQ9B,EAAAA,EAAAA,KAAW+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,kFAMXF,EAAAA,EAAAA,GAASgC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,ioBA+BjB+B,GAAQjC,EAAAA,EAAAA,GAAOkC,EAAAA,GAAPlC,CAAamC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,ioCA2DrBkC,EAASpC,EAAAA,EAAAA,OAAaqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,g+BA+CtBoC,EAAetC,EAAAA,EAAAA,OAAauC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,uiCAkD5BsC,EAAUxC,EAAAA,EAAAA,OAAayC,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,i8BA8CvBwC,EAAO1C,EAAAA,EAAAA,EAAQ2C,IAAAA,GAAAzC,EAAAA,EAAAA,GAAA,iJAQf0C,EAAY5C,EAAAA,EAAAA,EAAQ6C,IAAAA,GAAA3C,EAAAA,EAAAA,GAAA,0QAgBpB4C,GAAO9C,EAAAA,EAAAA,GAAO+C,EAAAA,GAAP/C,CAAegD,IAAAA,GAAA9C,EAAAA,EAAAA,GAAA,0K,SCzTtB+C,EAAU,SAAAC,GACnB,IAAMC,EAAa,SAAHC,GAAkB,IAAZ5B,EAAI4B,EAAJ5B,KAClB,OACI6B,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACT9B,KAAMA,EACN+B,OAAQ,SAAAC,GAAO,OAAIH,EAAAA,EAAAA,KAACT,EAAS,CAAAa,SAAED,GAAoB,GAG/D,EAMA,OACIH,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CACHC,iBAAkBjD,EAClBkD,cAAeV,EAAMW,KACrBC,SARa,SAAAD,GACjBX,EAAMa,KAAKF,EACf,EAM+BJ,SAEtB,kBACGO,EAAAA,EAAAA,MAACrC,EAAO,CAAA8B,SAAA,EACJJ,EAAAA,EAAAA,KAACvB,EAAK,CAAA2B,SAAC,kBACPO,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAR,SAAA,EACDJ,EAAAA,EAAAA,KAACpB,EAAK,CAACT,KAAK,QAAQ0C,YAAY,WAChCb,EAAAA,EAAAA,KAACF,EAAU,CAAC3B,KAAK,WAEjB6B,EAAAA,EAAAA,KAACpB,EAAK,CACFT,KAAK,WACL2C,KAAK,WACLD,YAAY,cAEhBb,EAAAA,EAAAA,KAACF,EAAU,CAAC3B,KAAK,cAEjB6B,EAAAA,EAAAA,KAACpB,EAAK,CACFT,KAAK,UACL2C,KAAK,WACLD,YAAY,sBAEhBb,EAAAA,EAAAA,KAACF,EAAU,CAAC3B,KAAK,aAEjB6B,EAAAA,EAAAA,KAACjB,EAAM,CAAC+B,KAAK,SAAQV,SAAC,aAG1BO,EAAAA,EAAAA,MAACtB,EAAI,CAAAe,SAAA,CAAC,4BAEFJ,EAAAA,EAAAA,KAACP,EAAI,CAACsB,GAAI,SAASX,SAAC,eAElB,GAI1B,E,oBCjDaY,EAAU,SAAHjB,GAAwB,IAAlBS,EAAIT,EAAJS,KAAMS,EAAIlB,EAAJkB,KACtBC,GAAWC,EAAAA,EAAAA,MASjB,OACInB,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CACHC,iBAAkBpC,EAClBqC,cAAeC,EACfC,SAZa,SAACW,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC5B,IACIJ,GAASK,EAAAA,EAAAA,IAAaH,IACtBE,GACJ,CAAE,MAAOE,GACLC,QAAQC,IAAIF,EAChB,CACJ,EAK+BpB,SAEtB,SAAAuB,GAAA,IAAGP,EAAMO,EAANP,OAAM,OACNT,EAAAA,EAAAA,MAACpC,EAAU,CAAA6B,SAAA,EACPJ,EAAAA,EAAAA,KAACvB,EAAK,CAAA2B,SAAC,kBACPO,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAR,SAAA,EACDJ,EAAAA,EAAAA,KAACpB,EAAK,CAACT,KAAK,OAAO0C,YAAY,UAC/Bb,EAAAA,EAAAA,KAACF,EAAU,CAAC3B,KAAK,UACjB6B,EAAAA,EAAAA,KAACpB,EAAK,CAACT,KAAK,QAAQ0C,YAAY,kBAChCb,EAAAA,EAAAA,KAACF,EAAU,CAAC3B,KAAK,WACjB6B,EAAAA,EAAAA,KAACpB,EAAK,CAACT,KAAK,OAAO0C,YAAY,kBAC/Bb,EAAAA,EAAAA,KAACF,EAAU,CAAC3B,KAAK,UACjB6B,EAAAA,EAAAA,KAACf,EAAY,CAAC6B,KAAK,SAAQV,SAAC,cAC5BJ,EAAAA,EAAAA,KAACb,EAAO,CAAC2B,KAAK,SAASc,QAAS,kBAAMX,EAAKG,EAAO,EAAChB,SAAC,aAIxDO,EAAAA,EAAAA,MAACtB,EAAI,CAAAe,SAAA,CAAC,4BAEFJ,EAAAA,EAAAA,KAACP,EAAI,CAACsB,GAAI,SAASX,SAAC,eAEf,GAI7B,EACaN,EAAa,SAAH+B,GAAkB,IAAZ1D,EAAI0D,EAAJ1D,KACzB,OACI6B,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACT9B,KAAMA,EACN+B,OAAQ,SAAAC,GAAO,OAAIH,EAAAA,EAAAA,KAACT,EAAS,CAAAa,SAAED,GAAoB,GAG/D,EC5Da2B,EAAW,WACpB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,CAC7BxE,MAAO,GACPM,SAAU,GACVE,QAAS,GACTG,KAAM,GACNC,MAAO,GACPC,KAAM,KACR4D,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAPKvB,EAAIyB,EAAA,GAAEE,EAAOF,EAAA,GASpBG,GAAsCJ,EAAAA,EAAAA,UAAS,GAAEK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAc5BG,EAAQ,EACVxC,EAAAA,EAAAA,KAACJ,EAAO,CAACc,KAbU,SAAC+B,GAA4B,IAAnBC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAClCR,GAAQ,SAAAlB,GAAI,OAAA6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAU7B,GAASwB,EAAO,IAClCC,GAIJH,GAAe,SAAAtB,GAAI,OAAIA,EAAO,CAAC,GACnC,EAMmCT,KAAMA,KACrCR,EAAAA,EAAAA,KAACgB,EAAO,CAACC,KANU,SAAAwB,GACnBN,GAAQ,SAAAlB,GAAI,OAAA6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAU7B,GAASwB,EAAO,IACtCF,GAAe,SAAAtB,GAAI,OAAIA,EAAO,CAAC,GACnC,EAGmCT,KAAMA,KAGzC,OAAOR,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAA3C,SAAGoC,EAAMF,IACpB,ECjBA,EAZqB,WACjB,OACItC,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAA3C,UACIJ,EAAAA,EAAAA,KAACtD,EAAAA,EAAS,CAAA0D,UACNJ,EAAAA,EAAAA,KAAC5C,EAAAA,EAAa,CAAAgD,UACVJ,EAAAA,EAAAA,KAAC8B,EAAQ,SAK7B,C","sources":["components/Utils/Styles/Container-auth-login/ContainerAuth.jsx","components/Utils/Styles/ContainterAllStyled.jsx","pages/Register/schemaValidation/SchemaValid.jsx","pages/Register/authForm/authFormStyled.jsx","pages/Register/step/StepOne.jsx","pages/Register/step/StepTwo.jsx","pages/Register/authForm/authForm.jsx","pages/Register/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport imgDesc from '../../../../data/img_BackgroundAauth/bg-desc.png';\nimport imgDesc2x from '../../../../data/img_BackgroundAauth/bg-desc2x.png';\nimport imgTable from '../../../../data/img_BackgroundAauth/bg-table.png';\nimport imgTablex2 from '../../../../data/img_BackgroundAauth/bg-table2x.png';\nimport imgPhone from '../../../../data/img_BackgroundAauth/bg-phone.png';\nimport imgPhonex2 from '../../../../data/img_BackgroundAauth/bg-phone2x.png';\n\nexport const Container = styled.section`\n    margin-top: 74px;\n    padding-top: 40px;\n    padding-bottom: 40px;\n    background: #fdf7f2;\n    background-image: url(${imgPhone});\n    background-position: center 100%;\n    height: calc(100vh - 147px);\n    background-repeat: no-repeat;\n    background-size: contain;\n\n    @media (min-device-pixel-ratio: 2),\n        (-webkit-min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background-image: url('${imgPhonex2}');\n    }\n\n    @media (min-width: 768px) {\n        margin-top: 96px;\n        padding-top: 100px;\n        padding-bottom: 100px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-image: url(${imgTable});\n        \n        @media (min-device-pixel-ratio: 2),\n            (-webkit-min-device-pixel-ratio: 2),\n            (min-resolution: 192dpi),\n            (min-resolution: 2dppx) {\n            background-image: url('${imgTablex2}');\n        }\n\n        @media (min-width: 1280px) {\n            display: block;\n            height: calc(100vh - 208px);\n            background-image: url(${imgDesc});\n            padding-top: 70px;\n            padding-bottom: 70px;\n            \n            @media (min-device-pixel-ratio: 2),\n                (-webkit-min-device-pixel-ratio: 2),\n                (min-resolution: 192dpi),\n                (min-resolution: 2dppx) {\n                background-image: url('${imgDesc2x}');\n            }\n        }\n    }\n`;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n    width: 280px;\n    margin: 0 auto;\n    padding: 0 20px;\n\n    @media (min-width: 768px) {\n        width: 704px;\n        padding: 0 32px;\n    }\n    \n    @media (min-width: 1280px) {\n        width: 1248px;\n        padding: 0 16px;\n    }\n`;\n","import * as yup from 'yup';\nconst emailRegExp = /^([a-zA-Z][\\w+-]+(?:\\.\\w+)?)@([\\w-]+(?:\\.[a-z]{2,10})+)$/;\n\nconst PassRegExp =\n    /([a-z]+[A-Z]+[0-9]+|[a-z]+[0-9]+[A-Z]+|[A-Z]+[a-z]+[0-9]+|[A-Z]+[0-9]+[a-z]+|[0-9]+[a-z]+[A-Z]+|[0-9]+[A-Z]+[a-z]+)/;\nexport const stepOneValidationSchema = yup.object().shape({\n    email: yup\n        .string()\n        .matches(emailRegExp, 'Invalid Email')\n        .matches()\n        .typeError()\n        .min(10)\n        .max(63)\n        .required('Required field')\n        .email('not valid Email'),\n    password: yup\n        .string()\n        .matches(PassRegExp, 'Example password :Aa12')\n        .matches(/^[^ ]{7,32}$/, 'The password not contain a space')\n        .required('Required field')\n        .min(7, 'Minimum 7 characters')\n        .max(32, 'Maximum 32 characters')\n        .trim('Spaces not available'),\n\n    confirm: yup\n        .string()\n        .required('Confirm password is required field')\n        .oneOf([yup.ref('password'), null], 'Different passwords'),\n});\nconst phoneRegExp = /^\\+380\\d{9}$/;\nconst cityRegExp = /[A-Z][a-z]+, [A-Z][a-z]*/;\nexport const stepTwoValidationSchema = yup.object().shape({\n    name: yup.string().required('Required field'),\n    phone: yup\n        .string()\n        .matches(phoneRegExp, 'Example: +38012345789')\n        .typeError(\"That doesn't look like a phone number\")\n        .min(8)\n        .required('A phone number is required'),\n    city: yup\n        .string()\n        .required()\n        .min(2, 'Minimum 2 characters')\n        .max(32)\n        .matches(cityRegExp, 'Example:Odesa, Odeska'),\n});\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const DivForm = styled.div`\n    padding: 20px;\n\n    @media (min-width: 320px) {\n        background: transparent;\n        margin-right: auto;\n        margin-left: auto;\n    }\n\n    @media (min-width: 768px) {\n        width: 568px;\n        height: 477px;\n        background: #ffffff;\n        margin-right: auto;\n        margin-left: auto;\n        padding: 20px;\n        box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n        border-radius: 40px;\n    }\n\n    @media (min-width: 1280px) {\n        width: 578px;\n        height: 501px;\n        background: #ffffff;\n        margin-right: auto;\n        margin-left: auto;\n        box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n        border-radius: 40px;\n    }\n`;\n\nexport const DivFormTwo = styled.div`\n    @media (min-width: 320px) {\n        background: transparent;\n        margin-right: auto;\n        margin-left: auto;\n    }\n\n    @media (min-width: 768px) {\n        width: 568px;\n        height: 477px;\n        background: #ffffff;\n        margin-right: auto;\n        margin-left: auto;\n        padding: 20px;\n        box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n        border-radius: 40px;\n    }\n\n    @media (min-width: 1280px) {\n        width: 578px;\n        height: 501px;\n        background: #ffffff;\n        margin-right: auto;\n        margin-left: auto;\n        box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n        border-radius: 40px;\n    }\n`;\n\nexport const Forms = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`;\n\nexport const Title = styled.h2`\n    font-family: 'Manrope';\n    text-align: center;\n\n    @media (min-width: 320px) {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 36px;\n        line-height: 49px;\n        margin-bottom: 40px;\n    }\n\n    @media (min-width: 768px) {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 36px;\n        line-height: 49px;\n        margin-bottom: 40px;\n        margin-top: 40px;\n    }\n\n    @media (min-width: 1280px) {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 36px;\n        line-height: 49px;\n\n        margin-bottom: 40px;\n    }\n`;\n\nexport const Input = styled(Field)`\n    display: block;\n    background: #fdf7f2;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 40px;\n    margin: 0 auto;\n\n    :active,\n    :hover,\n    :focus {\n        outline: 0;\n        outline-offset: 0;\n    }\n\n    ::placeholder {\n        color: rgba(17, 17, 17, 0.6);\n    }\n\n    @media (min-width: 320px) {\n        font-size: 14px;\n        margin-bottom: 15px;\n        width: 216px;\n        height: 36px;\n\n        ::placeholder {\n            font-size: 14px;\n        }\n        padding-left: 20px;\n    }\n\n    @media (min-width: 768px) {\n        width: 404px;\n        height: 48px;\n        padding-left: 20px;\n        margin-top: 16px;\n        font-size: 18px;\n\n        ::placeholder {\n            font-size: 18px;\n        }\n\n        :not(:last-child) {\n            margin-top: 0px;\n        }\n    }\n\n    @media (min-width: 1280px) {\n        margin-top: 18px;\n        padding-left: 20px;\n        width: 414px;\n        height: 48px;\n        font-size: 18px;\n\n        ::placeholder {\n            font-size: 18px;\n            color: rgba(17, 17, 17, 0.6);\n        }\n    }\n`;\nexport const Button = styled.button`\n    transition: all 600ms ease;\n    background: #f59256;\n    color: white;\n    font-style: normal;\n    font-weight: 500;\n    cursor: pointer;\n    font-family: 'Manrope';\n    border-radius: 40px;\n    margin: 40px auto;\n    border: none;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n\n    &:hover,\n    &:focus {\n        background: white;\n        color: #f59256;\n    }\n\n    @media (min-width: 320px) {\n        width: 240px;\n        height: 44px;\n    }\n\n    @media (min-width: 768px) {\n        width: 448px;\n        line-height: 25px;\n        letter-spacing: 0.04em;\n        height: 44px;\n        font-size: 20px;\n        display: flex;\n        align-items: center;\n        display: block;\n    }\n\n    @media (min-width: 1280px) {\n        font-size: 20px;\n        line-height: 25px;\n        display: flex;\n        align-items: center;\n        letter-spacing: 0.04em;\n        width: 438px;\n        height: 48px;\n        display: block;\n    }\n`;\n\nexport const ButtonTwoReg = styled.button`\n    transition: all 600ms ease;\n    background: #f59256;\n    color: white;\n    font-style: normal;\n    font-weight: 500;\n    cursor: pointer;\n    font-family: 'Manrope';\n    border-radius: 40px;\n    margin-top: 40px;\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n    border: none;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n\n    &:hover,\n    &:focus {\n        background: white;\n        color: #f59256;\n    }\n\n    @media (min-width: 320px) {\n        width: 280px;\n        height: 44px;\n    }\n\n    @media (min-width: 768px) {\n        width: 448px;\n        line-height: 25px;\n        letter-spacing: 0.04em;\n        height: 44px;\n        font-size: 20px;\n        display: flex;\n        align-items: center;\n        display: block;\n    }\n\n    @media (min-width: 1280px) {\n        font-size: 20px;\n        line-height: 25px;\n        display: flex;\n        align-items: center;\n        letter-spacing: 0.04em;\n        width: 458px;\n        height: 48px;\n        display: block;\n    } ;\n`;\n\nexport const Button1 = styled.button`\n    transition: all 600ms ease;\n    font-style: normal;\n    font-weight: 500;\n    cursor: pointer;\n    font-family: 'Manrope';\n    border-radius: 40px;\n    margin: 16px auto;\n    border: none;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    background: #f59256;\n    color: white;\n\n    &:hover,\n    &:focus {\n        background: white;\n        color: #f59256;\n    }\n\n    @media (min-width: 320px) {\n        width: 280px;\n        height: 44px;\n    }\n\n    @media (min-width: 768px) {\n        width: 448px;\n        height: 44px;\n        font-size: 20px;\n        line-height: 25px;\n        display: flex;\n        align-items: center;\n        display: block;\n    }\n\n    @media (min-width: 1280px) {\n        font-size: 20px;\n        line-height: 25px;\n        display: flex;\n        align-items: center;\n        letter-spacing: 0.04em;\n        width: 458px;\n        height: 48px;\n        display: block;\n    } ;\n`;\n\nexport const Text = styled.p`\n    font-family: 'Manrope';\n    font-size: 12px;\n    line-height: 16px;\n    color: rgba(17, 17, 17, 0.6);\n    text-align: center;\n`;\n\nexport const FormError = styled.p`\n    color: #f59256;\n    margin-left: 90px;\n    margin-top: -18px;\n    position: absolute;\n    font-size: 14px;\n\n    @media (min-width: 320px) {\n        margin-left: 10px;\n    }\n\n    @media (min-width: 768px) {\n        margin-left: 90px;\n    }\n`;\n\nexport const Link = styled(NavLink)`\n    transition: all 600ms ease;\n    font-size: 12px;\n    color: #3091eb;\n    margin-left: 3px;\n\n    &:hover,\n    &:focus {\n        opacity: 0.5;\n    }\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport React from 'react';\nimport { stepOneValidationSchema } from '../schemaValidation/SchemaValid';\n\nimport {\n    DivForm,\n    Input,\n    Title,\n    Button,\n    Text,\n    FormError,\n    Link,\n} from '../authForm/authFormStyled';\n\nexport const StepOne = props => {\n    const FormErrors = ({ name }) => {\n        return (\n            <ErrorMessage\n                name={name}\n                render={message => <FormError>{message}</FormError>}\n            />\n        );\n    };\n\n    const handleSubmit = data => {\n        props.next(data);\n    };\n    \n    return (\n        <Formik\n            validationSchema={stepOneValidationSchema}\n            initialValues={props.data}\n            onSubmit={handleSubmit}\n        >\n            {() => (\n                <DivForm>\n                    <Title>Registration</Title>\n                    <Form>\n                        <Input name=\"email\" placeholder=\"Email\" />\n                        <FormErrors name=\"email\" />\n\n                        <Input\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                        <FormErrors name=\"password\" />\n\n                        <Input\n                            name=\"confirm\"\n                            type=\"password\"\n                            placeholder=\"Confirm password\"\n                        />\n                        <FormErrors name=\"confirm\" />\n\n                        <Button type=\"submit\">Next</Button>\n                    </Form>\n\n                    <Text>\n                        Already have an account?\n                        <Link to={'/login'}>Login</Link>\n                    </Text>\n                </DivForm>\n            )}\n        </Formik>\n    );\n};\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport React from 'react';\nimport { stepTwoValidationSchema } from '../schemaValidation/SchemaValid';\n\nimport {\n    Link,\n    Input,\n    Title,\n    Text,\n    FormError,\n    Button1,\n    DivFormTwo,\n    ButtonTwoReg,\n} from '../authForm/authFormStyled';\nimport { registerUser } from '../../../redux/Auth/AuthOperations';\nimport { useDispatch } from 'react-redux';\n\nexport const StepTwo = ({ data, prev }) => {\n    const dispatch = useDispatch();\n    const handleSubmit = (values, { resetForm }) => {\n        try {\n            dispatch(registerUser(values));\n            resetForm();\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    return (\n        <Formik\n            validationSchema={stepTwoValidationSchema}\n            initialValues={data}\n            onSubmit={handleSubmit}\n        >\n            {({ values }) => (\n                <DivFormTwo>\n                    <Title>Registration</Title>\n                    <Form>\n                        <Input name=\"name\" placeholder=\"Name\" />\n                        <FormErrors name=\"name\" />\n                        <Input name=\"phone\" placeholder=\"Mobile phone\" />\n                        <FormErrors name=\"phone\" />\n                        <Input name=\"city\" placeholder=\"City,region \" />\n                        <FormErrors name=\"city\" />\n                        <ButtonTwoReg type=\"submit\">Register</ButtonTwoReg>\n                        <Button1 type=\"button\" onClick={() => prev(values)}>\n                            Back\n                        </Button1>\n                    </Form>\n                    <Text>\n                        Already have an account?\n                        <Link to={'/login'}>Login</Link>\n                    </Text>\n                </DivFormTwo>\n            )}\n        </Formik>\n    );\n};\nexport const FormErrors = ({ name }) => {\n    return (\n        <ErrorMessage\n            name={name}\n            render={message => <FormError>{message}</FormError>}\n        />\n    );\n};\n","import React, { useState } from 'react';\nimport { StepOne } from '../step/StepOne';\nimport { StepTwo } from '../step/StepTwo';\n\nexport const AuthForm = () => {\n    const [data, setData] = useState({\n        email: '',\n        password: '',\n        confirm: '',\n        name: '',\n        phone: '',\n        city: '',\n    });\n\n    const [currentStep, setCurrentStep] = useState(0);\n\n    const handleNextStep = (newData, final = false) => {\n        setData(prev => ({ ...prev, ...newData }));\n        if (final) {\n            return;\n        }\n\n        setCurrentStep(prev => prev + 1);\n    };\n    const handlePrevStep = newData => {\n        setData(prev => ({ ...prev, ...newData }));\n        setCurrentStep(prev => prev - 1);\n    };\n    const steps = [\n        <StepOne next={handleNextStep} data={data} />,\n        <StepTwo prev={handlePrevStep} data={data} />,\n    ];\n\n    return <>{steps[currentStep]}</>;\n};\n","import React from 'react';\nimport { MainContainer } from 'components/Utils/Styles/ContainterAllStyled';\nimport { Container } from '../../components/Utils/Styles/Container-auth-login/ContainerAuth';\nimport { AuthForm } from './authForm/authForm';\n\nconst RegisterPage = () => {\n    return (\n        <>\n            <Container>\n                <MainContainer>\n                    <AuthForm />\n                </MainContainer>\n            </Container>\n        </>\n    );\n};\n\nexport default RegisterPage;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","imgPhone","imgPhonex2","imgTable","imgTablex2","imgDesc","imgDesc2x","MainContainer","stepOneValidationSchema","yup","shape","email","matches","typeError","min","max","required","password","trim","confirm","oneOf","stepTwoValidationSchema","name","phone","city","DivForm","DivFormTwo","_templateObject2","Title","_templateObject3","_templateObject4","Input","Field","_templateObject5","Button","_templateObject6","ButtonTwoReg","_templateObject7","Button1","_templateObject8","Text","_templateObject9","FormError","_templateObject10","Link","NavLink","_templateObject11","StepOne","props","FormErrors","_ref","_jsx","ErrorMessage","render","message","children","Formik","validationSchema","initialValues","data","onSubmit","next","_jsxs","Form","placeholder","type","to","StepTwo","prev","dispatch","useDispatch","values","_ref2","resetForm","registerUser","error","console","log","_ref3","onClick","_ref4","AuthForm","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","currentStep","setCurrentStep","steps","newData","final","arguments","length","undefined","_objectSpread","_Fragment"],"sourceRoot":""}