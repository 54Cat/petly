{"version":3,"file":"static/js/575.9e5878c5.chunk.js","mappings":"0eAQaA,EAAYC,EAAAA,EAAAA,QAAc,+8CAKXC,EAUKC,EAUDC,EAMKC,EAMDC,EAQKC,E,sECnD5BC,E,QAAgBP,EAAAA,IAAU,iR,kLCD1BQ,EAAwBC,EAAAA,KAAaC,MAAM,CACpDC,MAAOF,EAAAA,KAAaG,WACpBC,SAAUJ,EAAAA,KAAaG,WAAWE,IAAI,EAAG,iGAAsBC,IAAI,M,uCCC1DC,EAAUhB,EAAAA,EAAAA,IAAU,2uBAsCpBiB,GANQjB,EAAAA,EAAAA,KAAW,gGAMXA,EAAAA,EAAAA,GAAS,mpBA+BjBkB,GAAQlB,EAAAA,EAAAA,GAAOmB,EAAAA,GAAPnB,CAAa,0jCAqDrBoB,EAASpB,EAAAA,EAAAA,OAAa,2jCAmDtBqB,EAAOrB,EAAAA,EAAAA,EAAQ,+JAQfsB,EAAYtB,EAAAA,EAAAA,EAAQ,yOAYpBuB,GAAOvB,EAAAA,EAAAA,GAAOwB,EAAAA,GAAPxB,CAAe,6L,SClLtByB,EAAQ,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,CAC7BnB,MAAO,GACPE,SAAU,KACZ,eAHKkB,EAAI,KAAEC,EAAO,KAcdC,EAAa,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KAClB,OACI,SAAC,KAAY,CACTA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACd,EAAS,UAAEc,GAAoB,GAG/D,EAEA,OACI,SAAC,KAAM,CACHC,iBAAkB7B,EAClB8B,cAAeP,EACfQ,SAtBa,SAACR,EAAK,GAAoB,IAAjBS,EAAS,EAATA,UAC1B,IACIZ,GAASa,EAAAA,EAAAA,IAAUV,IACnBC,EAAQ,IACRQ,IAEAd,EAAS,QACK,CAAhB,MAAOgB,GAAS,CACtB,EAc+B,SAEtB,kBACG,UAAC1B,EAAO,YACJ,SAACC,EAAK,UAAC,WACP,UAAC,KAAI,YACD,SAACC,EAAK,CAACgB,KAAK,QAAQS,YAAY,WAChC,SAACV,EAAU,CAACC,KAAK,WACjB,SAAChB,EAAK,CAACgB,KAAK,WAAWS,YAAY,cACnC,SAACV,EAAU,CAACC,KAAK,cAEjB,SAACd,EAAM,CAACwB,KAAK,SAAQ,SAAC,cAG1B,UAACvB,EAAI,WAAC,4BAEF,SAACE,EAAI,CAACsB,GAAI,YAAY,SAAC,kBAErB,GAI1B,E,mBCjEaC,EAAY,WACrB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,GAC9B,OAAO,yBAAMF,GAAY,SAACG,EAAA,EAAM,KAAM,SAACzB,EAAK,KAChD,ECUA,EAZkB,WACd,OACI,+BACI,SAAC,IAAS,WACN,SAAC,IAAa,WACV,SAACqB,EAAS,SAK9B,C","sources":["components/Utils/Styles/Container-auth-login/ContainerAuth.jsx","components/Utils/Styles/ContainterAllStyled.jsx","pages/Login/schemaValidation/SchemaValid.jsx","pages/Login/authLoginStyled.jsx","pages/Login/Login.jsx","pages/Login/authLogin.jsx","pages/Login/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport imgDesc from '../../../../data/img_BackgroundAauth/bg-desc.png';\nimport imgDesc2x from '../../../../data/img_BackgroundAauth/bg-desc2x.png';\nimport imgTable from '../../../../data/img_BackgroundAauth/bg-table.png';\nimport imgTablex2 from '../../../../data/img_BackgroundAauth/bg-table2x.png';\nimport imgPhone from '../../../../data/img_BackgroundAauth/bg-phone.png';\nimport imgPhonex2 from '../../../../data/img_BackgroundAauth/bg-phone2x.png';\n\nexport const Container = styled.section`\n    margin-top: 74px;\n    padding-top: 40px;\n    padding-bottom: 40px;\n    background: #fdf7f2;\n    background-image: url(${imgPhone});\n    background-position: center 100%;\n    height: calc(100vh - 147px);\n    background-repeat: no-repeat;\n    background-size: contain;\n\n    @media (min-device-pixel-ratio: 2),\n        (-webkit-min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background-image: url('${imgPhonex2}');\n    }\n\n    @media (min-width: 768px) {\n        margin-top: 96px;\n        padding-top: 100px;\n        padding-bottom: 100px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-image: url(${imgTable});\n        \n        @media (min-device-pixel-ratio: 2),\n            (-webkit-min-device-pixel-ratio: 2),\n            (min-resolution: 192dpi),\n            (min-resolution: 2dppx) {\n            background-image: url('${imgTablex2}');\n        }\n\n        @media (min-width: 1280px) {\n            display: block;\n            height: calc(100vh - 208px);\n            background-image: url(${imgDesc});\n            padding-top: 70px;\n            padding-bottom: 70px;\n            \n            @media (min-device-pixel-ratio: 2),\n                (-webkit-min-device-pixel-ratio: 2),\n                (min-resolution: 192dpi),\n                (min-resolution: 2dppx) {\n                background-image: url('${imgDesc2x}');\n            }\n        }\n    }\n`;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n    width: 280px;\n    margin: 0 auto;\n    padding: 0 20px;\n\n    @media (min-width: 768px) {\n        width: 704px;\n        padding: 0 32px;\n    }\n    \n    @media (min-width: 1280px) {\n        width: 1248px;\n        padding: 0 16px;\n    }\n`;\n","import * as yup from 'yup';\nexport const loginValidationSchema = yup.object().shape({\n    email: yup.string().required(),\n    password: yup.string().required().min(7, 'Минимум 7 символов').max(32),\n});\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const DivForm = styled.div`\n    padding: 20px;\n\n    @media (min-width: 320px) {\n        background: transparent;\n        margin-right: auto;\n        margin-left: auto;\n        padding: 0px;\n    }\n\n    @media (min-width: 768px) {\n        width: 568px;\n        height: 409px;\n        background: #ffffff;\n        margin-right: auto;\n        margin-left: auto;\n        box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n        border-radius: 40px;\n        padding: 20px;\n    }\n\n    @media (min-width: 1280px) {\n        width: 578px;\n        height: 433px;\n        background: #ffffff;\n        margin-right: auto;\n        margin-left: auto;\n        box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n        border-radius: 40px;\n    }\n`;\n\nexport const Forms = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`;\n\nexport const Title = styled.h2`\n    font-family: 'Manrope';\n    text-align: center;\n\n    @media (min-width: 320px) {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 36px;\n        line-height: 49px;\n        margin-bottom: 40px;\n    }\n\n    @media (min-width: 768px) {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 36px;\n        line-height: 49px;\n        margin-bottom: 40px;\n        margin-top: 40px;\n    }\n    \n    @media (min-width: 1280px) {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 36px;\n        line-height: 49px;\n\n        margin-bottom: 40px;\n    }\n`;\n\nexport const Input = styled(Field)`\n    font-family: 'Manrope';\n    background: #fdf7f2;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 40px;\n    display: block;\n    margin: 0 auto;\n\n    :active,\n    :hover,\n    :focus {\n        outline: 0;\n        outline-offset: 0;\n    }\n\n    @media (min-width: 320px) {\n        margin-top: 15px;\n        font-size: 14px;\n        width: 256px;\n        height: 36px;\n        padding-left: 20px;\n\n        ::placeholder {\n            color: rgba(17, 17, 17, 0.6);\n            font-size: 14px;\n        }\n    }\n\n    @media (min-width: 768px) {\n        width: 404px;\n        height: 48px;\n        font-size: 18px;\n        padding-left: 20px;\n        margin-top: 16px;\n\n        ::placeholder {\n            color: rgba(17, 17, 17, 0.6);\n            font-size: 18px;\n        }\n    }\n\n    @media (min-width: 1280px) {\n        margin-top: 18px;\n        padding-left: 20px;\n        width: 414px;\n        height: 48px;\n\n        ::placeholder {\n            color: rgba(17, 17, 17, 0.6);\n        }\n    }\n`;\n\nexport const Button = styled.button`\n    transition: all 600ms ease;\n    background: #f59256;\n    color: white;\n    font-style: normal;\n    font-weight: 500;\n    cursor: pointer;\n    font-family: 'Manrope';\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 40px;\n    display: block;\n    margin: 40px auto;\n    border: none;\n\n    &:hover,\n    &:focus {\n        border: 1px solid rgba(245, 146, 86, 0.5);\n\n        background: white;\n        color: #f59256;\n    }\n\n    @media (min-width: 320px) {\n        width: 280px;\n        height: 44px;\n    }\n\n    @media (min-width: 768px) {\n        width: 448px;\n        line-height: 25px;\n        letter-spacing: 0.04em;\n        height: 44px;\n        font-size: 20px;\n        display: flex;\n        align-items: center;\n        display: block;\n    }\n\n    @media (min-width: 1280px) {\n        font-size: 20px;\n        line-height: 25px;\n\n        display: flex;\n        align-items: center;\n        letter-spacing: 0.04em;\n        width: 438px;\n        height: 48px;\n        display: block;\n    }\n`;\n\nexport const Text = styled.p`\n    font-family: 'Manrope';\n    font-size: 12px;\n    line-height: 16px;\n    color: rgba(17, 17, 17, 0.6);\n    text-align: center;\n`;\n\nexport const FormError = styled.p`\n    margin-left: 10px;\n    color: #f59256;\n    margin-left: 90px;\n    margin-top: -2px;\n    position: absolute;\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n        margin-left: 90px;\n    }\n`;\nexport const Link = styled(NavLink)`\n    transition: all 600ms ease;\n    color: #3091eb;\n    margin-left: 3px;\n    font-size: 12px; \n    \n    &:hover,\n    &:focus {\n        opacity: 0.5;\n    }\n`;","import { Formik, Form, ErrorMessage } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { loginUser } from 'redux/Auth/AuthOperations';\nimport { loginValidationSchema } from '../Login/schemaValidation/SchemaValid';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n    DivForm,\n    Input,\n    Title,\n    Button,\n    Text,\n    FormError,\n    Link,\n} from './authLoginStyled';\n\nexport const Login = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [data, setData] = useState({\n        email: '',\n        password: '',\n    });\n\n    const handleSubmit = (data, { resetForm }) => {\n        try {\n            dispatch(loginUser(data));\n            setData('');\n            resetForm();\n\n            navigate('/user');\n        } catch (errors) {}\n    };\n    const FormErrors = ({ name }) => {\n        return (\n            <ErrorMessage\n                name={name}\n                render={message => <FormError>{message}</FormError>}\n            />\n        );\n    };\n\n    return (\n        <Formik\n            validationSchema={loginValidationSchema}\n            initialValues={data}\n            onSubmit={handleSubmit}\n        >\n            {() => (\n                <DivForm>\n                    <Title>Login</Title>\n                    <Form>\n                        <Input name=\"email\" placeholder=\"Email\" />\n                        <FormErrors name=\"email\" />\n                        <Input name=\"password\" placeholder=\"Password\" />\n                        <FormErrors name=\"password\" />\n\n                        <Button type=\"submit\">Login</Button>\n                    </Form>\n\n                    <Text>\n                        Already have an account?\n                        <Link to={'/register'}>Register</Link>\n                    </Text>\n                </DivForm>\n            )}\n        </Formik>\n    );\n};\n","import React from 'react';\n\nimport { Login } from './Login';\nimport { Loader } from 'components/Utils/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { isLoading } from 'redux/Auth/AuthSelectors';\nexport const AuthLogin = () => {\n    const isLoaders = useSelector(isLoading);\n    return <div>{isLoaders ? <Loader /> : <Login />}</div>;\n};\n","import { MainContainer } from 'components/Utils/Styles/ContainterAllStyled';\nimport React from 'react';\n\nimport { Container } from '../../components/Utils/Styles/Container-auth-login/ContainerAuth';\n\nimport { AuthLogin } from './authLogin';\n\nconst LoginPage = () => {\n    return (\n        <>\n            <Container>\n                <MainContainer>\n                    <AuthLogin />\n                </MainContainer>\n            </Container>\n        </>\n    );\n};\n\nexport default LoginPage;\n"],"names":["Container","styled","imgPhone","imgPhonex2","imgTable","imgTablex2","imgDesc","imgDesc2x","MainContainer","loginValidationSchema","yup","shape","email","required","password","min","max","DivForm","Title","Input","Field","Button","Text","FormError","Link","NavLink","Login","navigate","useNavigate","dispatch","useDispatch","useState","data","setData","FormErrors","name","render","message","validationSchema","initialValues","onSubmit","resetForm","loginUser","errors","placeholder","type","to","AuthLogin","isLoaders","useSelector","isLoading","Loader"],"sourceRoot":""}