{"version":3,"file":"static/js/540.4a64432a.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBarStyled.jsx","components/SearchBar/SearchBar.jsx","redux/Notices/fetchNotices.js","components/Modals/ModalAddNewNotice/Step1.styled.jsx","components/Modals/ModalAddNewNotice/Step1.jsx","components/Modals/ModalAddNewNotice/step2Styled.jsx","components/Modals/ModalAddNewNotice/Step2.jsx","components/Modals/ModalAddNewNotice/formAddNoticeStyled.jsx","components/Modals/ModalAddNewNotice/formAddNotice.jsx","components/Modals/ModalAddNewNotice/useMultistepForm.js","components/Modals/ModalAddNewNotice/ModalAddNewNoticeStyled.jsx","components/Modals/ModalAddNewNotice/ModalAddNewNotice.jsx","components/Notices/NoticesCategoriesNav/NoticesCategoriesNavStyled.jsx","components/Notices/NoticesCategoriesNav/NoticesCategoriesNav.jsx","pages/Notices/NoticesPage.jsx","../node_modules/@mui/icons-material/HighlightOff.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n    width: 280px;\n    position: relative;\n    margin: 0 auto;\n    margin-top: 28px;\n    margin-bottom: 40px;\n    \n    @media (min-width: 768px) {\n        width: 652px;\n        margin-top: 40px;\n        margin-bottom: 60px;\n    }\n`\nexport const SearchButton = styled.button`\n    border: none;\n    background-color: transparent;\n    width: 32px;\n    height: 40px;\n    padding: 0;\n    position: absolute;\n    top: 3px;\n    right: 0;\n`","import SearchIcon from '@mui/icons-material/Search';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport { SearchButton, SearchForm } from './SearchBarStyled'\nimport { InputSearch  } from 'components/Utils/Styles/basicStyle'\nexport const SearchBar = ({handleSubmit, filter, onFilterChange, styles}) => {\n    return <SearchForm style={styles} onSubmit={handleSubmit}>\n            <InputSearch value={filter} onChange={onFilterChange} placeholder={'Search'}></InputSearch>\n        <SearchButton type=\"submit\" >{filter.trim() === '' ? <SearchIcon  sx={{ fontSize: 20 }} /> : <HighlightOffIcon sx={{ fontSize: 20 }} />  }</SearchButton>\n        </SearchForm>\n}","import axios from 'axios';\n\nexport const fetchFavoriteNotices = async () => {\n    const response = await axios.get(\n        `https://petly-backend-23cb.onrender.com/api/notices/myFavorite`\n    );\n    return response.data;\n};\n\nexport const updateFavoriteNotice = async (noticeId) => {\n    const response = await axios.get(\n        `https://petly-backend-23cb.onrender.com/api/notices/favorite/${noticeId}`\n    );\n    return response.data;\n};\n\nexport const fetchDeleteNotice = async (noticeId) => {\n    const response = await axios.delete(\n        `https://petly-backend-23cb.onrender.com/api/notices/${noticeId}`\n    );\n    return response.data;\n};\n","import styled from '@emotion/styled';\n\nexport const NavButton = styled.button`\n    font-size: 14px;\n    line-height: 1.36;\n    letter-spacing: 0.04em;\n    color: #111111;\n    background: #ffffff;\n    border: 2px solid #f59256;\n    border-radius: 40px;\n    padding: 8px 28px;\n    cursor: pointer;\n\n    @media (min-width: 768px) {\n        font-size: 20px;\n        padding: 10px 28px;\n    }\n`;\n","import React from 'react';\nimport { NavButton } from './Step1.styled';\n\nconst Step1 = ({ category, title, name, birthday, breed, updateFields }) => {\n    return (\n        <div>\n            <h1>Add pet</h1>\n            <div>\n                <NavButton\n                    type=\"button\"\n                    value=\"lost-found\"\n                    style={\n                        category === 'lost-found'\n                            ? {\n                                  color: '#ffffff',\n                                  backgroundColor: '#F59256',\n                                  border: 0,\n                              }\n                            : undefined\n                    }\n                    onClick={e => updateFields({ category: e.target.value })}\n                >\n                    lost/found\n                </NavButton>\n                <NavButton\n                    type=\"button\"\n                    value=\"for-free\"\n                    style={\n                        category === 'for-free'\n                            ? {\n                                  color: '#ffffff',\n                                  backgroundColor: '#F59256',\n                                  border: 0,\n                              }\n                            : undefined\n                    }\n                    onClick={e => updateFields({ category: e.target.value })}\n                >\n                    In good hands\n                </NavButton>\n                <NavButton\n                    type=\"button\"\n                    value=\"sell\"\n                    style={\n                        category === 'sell'\n                            ? {\n                                  color: '#ffffff',\n                                  backgroundColor: '#F59256',\n                                  border: 0,\n                              }\n                            : undefined\n                    }\n                    onClick={e => updateFields({ category: e.target.value })}\n                >\n                    sell\n                </NavButton>\n            </div>\n            <label htmlFor=\"title\">Title of ad</label>\n            <input\n                type=\"text\"\n                placeholder=\"Type name pet\"\n                name=\"title\"\n                value={title}\n                onChange={e => updateFields({ title: e.target.value })}\n            />\n\n            <label htmlFor=\"name\">Name pet</label>\n            <input\n                type=\"text\"\n                placeholder=\"Type name pet\"\n                name=\"name\"\n                value={name}\n                onChange={e => updateFields({ name: e.target.value })}\n            />\n\n            <label htmlFor=\"birthday\">Date of birth</label>\n            <input\n                type=\"text\"\n                placeholder=\"Type name pet\"\n                name=\"birthday\"\n                value={birthday}\n                onChange={e => updateFields({ birthday: e.target.value })}\n            />\n\n            <label htmlFor=\"breed\">Breed</label>\n            <input\n                type=\"text\"\n                placeholder=\"Type name pet\"\n                name=\"breed\"\n                value={breed}\n                onChange={e => updateFields({ breed: e.target.value })}\n            />\n        </div>\n    );\n};\n\nexport default Step1;\n","import imgF from '../../../data/img_ModalAddNewNotice/female.png';\nimport imgM from '../../../data/img_ModalAddNewNotice/male.png';\nimport styled from '@emotion/styled';\n\nexport const Input = styled.input`\n    width: 0;\n    height: 0;\n    position: absolute;\n    &:checked + span,\n    :hover + span,\n    :focus + span {\n        color: #f59256;\n    }\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column-reverse;\n    @media (min-width: 768px) {\n        margin-right: 80px;\n    }\n    margin-right: 40px;\n    :last-child {\n        margin-right: 0px;\n    }\n`;\n\nexport const LabelFemale = styled.span`\n    background-image: url(${imgF});\n    width: 40px;\n    height: 40px;\n    background-size: contain;\n    background-repeat: no-repeat;\n\n    @media (min-width: 768px) {\n        width: 60px;\n        height: 60px;\n    }\n`;\n\nexport const LabelMale = styled.span`\n    background-image: url(${imgM});\n    width: 40px;\n    height: 40px;\n    background-size: contain;\n    background-repeat: no-repeat;\n\n    @media (min-width: 768px) {\n        width: 60px;\n        height: 60px;\n    }\n`;\n\nexport const SpanTXT = styled.span`\n    font-size: 18px;\n    line-height: 26px;\n    margin-top: 12px;\n\n    @media (min-width: 768px) {\n        font-size: 20px;\n        margin-top: 20px;\n    }\n`;\n\nexport const Thumb = styled.fieldset`\n    display: flex;\n    border: none;\n`;\n\nexport const Title = styled.legend`\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 26px;\n    margin-bottom: 18px;\n\n    @media (min-width: 768px) {\n        font-size: 24px;\n        margin-bottom: 28px;\n    }\n`;\n\nexport const TitleColor = styled.span`\n    color: #f59256;\n`;","import React from 'react';\nimport {\n    LabelFemale,\n    LabelMale,\n    SpanTXT,\n    Label,\n    Input,\n    Thumb,\n    Title,\n    TitleColor,\n} from './step2Styled';\n\nconst Step2 = ({ category, sex, location, price, comments, updateFields }) => {\n    return (\n        <div>\n            <h1>Add pet</h1>\n            <Thumb>\n                <Title>\n                    The sex<TitleColor>*</TitleColor>:\n                </Title>\n                <Label htmlFor=\"Choice1\">\n                    <Input\n                        type=\"radio\"\n                        id=\"Choice1\"\n                        value=\"Male\"\n                        name={sex}\n                        onChange={e => updateFields({ sex: e.target.value })}\n                    />\n                    <SpanTXT>Male</SpanTXT>\n                    <LabelMale></LabelMale>\n                </Label>\n\n                <Label htmlFor=\"Choice2\">\n                    <Input\n                        type=\"radio\"\n                        id=\"Choice2\"\n                        value=\"Female\"\n                        name={sex}\n                        onChange={e => updateFields({ sex: e.target.value })}\n                    />\n                    <SpanTXT>Female</SpanTXT>\n                    <LabelFemale></LabelFemale>\n                </Label>\n            </Thumb>\n\n            <label htmlFor=\"location\">Location*:</label>\n            <input\n                type=\"text\"\n                name=\"location\"\n                placeholder=\"Type name pet\"\n                value={location}\n                onChange={e => updateFields({ location: e.target.value })}\n            />\n\n            {category === 'sell' && (\n                <>\n                    <label htmlFor=\"price\">Price*:</label>\n                    <input\n                        type=\"text\"\n                        name=\"price\"\n                        placeholder=\"Type name pet\"\n                        value={price}\n                        onChange={e => updateFields({ price: e.target.value })}\n                    />\n                </>\n            )}\n\n            <label htmlFor=\"petsPhoto\">\n                Load the pet’s image:\n                <input\n                    id=\"petsPhoto\"\n                    type=\"file\"\n                    name=\"petsPhoto\"\n                    onChange={e =>\n                        updateFields({ petsPhoto: e.target.files[0] })\n                    }\n                />\n            </label>\n\n            <label htmlFor=\"comments\">Comments</label>\n            <input\n                type=\"text\"\n                name=\"comments\"\n                placeholder=\"Type name pet\"\n                value={comments}\n                onChange={e => updateFields({ comments: e.target.value })}\n            />\n        </div>\n    );\n};\n\nexport default Step2;","import styled from '@emotion/styled';\n\nexport const ModalCard = styled.form`\n    box-sizing: border-box;\n    margin: 0 auto;\n    padding: 60px 20px 40px;\n    background-color: #ffffff;\n    border-radius: 20px;\n\n    display: flex;\n    flex-direction: column;\n\n    @media (min-width: 320px) {\n        width: 280px;\n    }\n\n    @media (min-width: 768px) {\n        padding: 32px 24px 32px 20px;\n        width: 704px;\n        border-radius: 40px;\n    }\n`;\n","import React, { useState } from 'react';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport { useMultistepForm } from './useMultistepForm';\nimport { useDispatch } from 'react-redux';\nimport { addNoticeOperation } from 'redux/Notices/noticesOperations';\nimport { ModalCard } from './formAddNoticeStyled';\n\nconst INITIAL_DATA = {\n    category: 'sell',\n    title: '',\n    name: '',\n    birthday: '',\n    breed: '',\n    sex: '',\n    location: '',\n    price: '',\n    petsPhoto: '',\n    comments: '',\n};\n\nconst ModalContent = ({ Close }) => {\n    const [data, setData] = useState(INITIAL_DATA);\n\n    function updateFields(fields) {\n        setData(prev => {\n            return { ...prev, ...fields };\n        });\n    }\n\n    const {\n        step,\n        isFirstStep,\n        isLastStep,\n        back,\n        next,\n    } = useMultistepForm([\n        <Step1 {...data} updateFields={updateFields} />,\n        <Step2 {...data} updateFields={updateFields} />,\n    ]);\n\n    const dispatch = useDispatch();\n\n    const entries = Object.entries(data).filter(entry => entry[0] !== 'files');\n\n    function onSubmit(e) {\n        e.preventDefault();\n        if (!isLastStep) return next();\n\n        const formData = new FormData();\n        entries.forEach(entry => {\n            formData.append(entry[0], entry[1]);\n        });\n        for (let property of formData.entries()) {\n            console.log(property[0], property[1]);\n          }\n        dispatch(addNoticeOperation(formData));\n\n        Close();\n    }\n\n    return (\n        <ModalCard onSubmit={onSubmit}>\n            {step}\n            <div>\n                {!isFirstStep ? (\n                    <button type=\"button\" onClick={back}>\n                        Back\n                    </button>\n                ) : (\n                    <button type=\"button\" onClick={Close}>\n                        Cancel\n                    </button>\n                )}\n                <button type=\"submit\">{isLastStep ? 'Done' : 'Next'}</button>\n            </div>\n        </ModalCard>\n    );\n};\n\nexport default ModalContent;\n","import { useState } from 'react';\n\nexport function useMultistepForm(steps) {\n    const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n    function next() {\n        setCurrentStepIndex(i => {\n            if (i >= steps.length - 1) return i;\n            return i + 1;\n        });\n    }\n\n    function back() {\n        setCurrentStepIndex(i => {\n            if (i <= 0) return i;\n            return i - 1;\n        });\n    }\n\n    function goTo(index) {\n        setCurrentStepIndex(index);\n    }\n\n    return {\n        currentStepIndex,\n        step: steps[currentStepIndex],\n        steps,\n        isFirstStep: currentStepIndex === 0,\n        isLastStep: currentStepIndex === steps.length - 1,\n        goTo,\n        next,\n        back,\n    };\n}\n","import styled from '@emotion/styled';\nimport Modal from 'react-modal';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport const ModalStyled = styled(Modal)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(1);\n    border-radius: 40px;\n    border-color: white;\n    background-color: red;\n\n    @media (min-width: 320px) {\n        width: 280px;\n    }\n\n    @media (min-width: 768px) {\n        width: 704px;\n    }\n`;\n\nexport const OpenBtn = styled.button`\n    line-height: 22px;\n    letter-spacing: 0.04em;\n`;\n\nexport const CloseBtn = styled.button`\n    position: absolute;\n    top: 23px;\n    right: 23px;\n    width: 34px;\n    height: 34px;\n    border-radius: 50%;\n    border-color: transparent;\n    cursor: pointer;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    @media (min-width: 768px) {\n        width: 44px;\n        height: 44px;\n\n        top: 12px;\n        right: 20px;\n    }\n`;\n\nexport const StyledIcon = styled(CloseIcon)`\n    fill: black;\n    width: 28px;\n    height: 28px;\n\n    &:hover {\n        fill: rgba(245, 146, 86, 1);\n    }\n\n    @media (min-width: 768px) {\n        width: 36px;\n        height: 36px;\n    }\n`;\n","import { useState } from 'react';\nimport ModalContent from './formAddNotice';\n\nimport {\n    ModalStyled,\n    CloseBtn,\n    StyledIcon,\n    OpenBtn,\n} from './ModalAddNewNoticeStyled';\n\nconst ModalAddNewNotice = () => {\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <div>\n            <OpenBtn onClick={openModal}>Learn more</OpenBtn>\n            <ModalStyled\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                contentLabel=\"Example Modal\"\n                shouldCloseOnOverlayClick={true}\n                style={{\n                    overlay: {\n                        backgroundColor: 'rgba(17, 17, 17, 0.6)',\n                    },\n                }}\n            >\n                <CloseBtn onClick={closeModal}>\n                    <StyledIcon />\n                </CloseBtn>\n\n                <ModalContent Close={closeModal}></ModalContent>\n            </ModalStyled>\n        </div>\n    );\n};\n\nexport default ModalAddNewNotice;\n","import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\nexport const NoticesCategoriesNavList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 12px;\n    margin-top: 28px;\n\n    @media (min-width: 768px) {\n       margin-top: 40px;\n       width: 70%;\n    }\n`\n\nexport const NoticesCategoriesNavButton = styled(NavLink)`\n    font-family: 'Manrope';\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.36;\n    letter-spacing: 0.04em;\n    color: #111111;\n    background: #FFFFFF;\n    border: 2px solid #F59256;\n    border-radius: 40px;\n    padding: 8px 28px;\n    cursor: pointer;\n\n    @media (min-width: 768px) {\n       font-size: 20px;\n       padding: 10px 28px;\n    }\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { getUserOperation } from '../../../redux/User/userOperations';\nimport { getAuth } from 'redux/selectors';\nimport ModalAddNewNotice from 'components/Modals/ModalAddNewNotice/ModalAddNewNotice';\nimport {\n    NoticesCategoriesNavList,\n    NoticesCategoriesNavButton,\n} from 'components/Notices/NoticesCategoriesNav/NoticesCategoriesNavStyled';\n\nexport const NoticesCategoriesNav = () => {\n    const dispatch = useDispatch();\n    const { isLoggedIn } = useSelector(getAuth);\n\n    useEffect(() => {\n        dispatch(getUserOperation());\n    }, [dispatch]);\n\n    const { category } = useParams();\n\n    return (\n        <NoticesCategoriesNavList>\n            <NoticesCategoriesNavButton\n                to={'/notices/sell'}\n                style={\n                    category === 'sell'\n                        ? {\n                              color: '#ffffff',\n                              backgroundColor: '#F59256',\n                              border: 0,\n                          }\n                        : undefined\n                }\n            >\n                sell\n            </NoticesCategoriesNavButton>\n            <NoticesCategoriesNavButton\n                to={'/notices/lost-found'}\n                style={\n                    category === 'lost-found'\n                        ? {\n                              color: '#ffffff',\n                              backgroundColor: '#F59256',\n                              border: 0,\n                          }\n                        : undefined\n                }\n            >\n                lost/found\n            </NoticesCategoriesNavButton>\n            <NoticesCategoriesNavButton\n                to={'/notices/for-free'}\n                style={\n                    category === 'for-free'\n                        ? {\n                              color: '#ffffff',\n                              backgroundColor: '#F59256',\n                              border: 0,\n                          }\n                        : undefined\n                }\n            >\n                In good hands\n            </NoticesCategoriesNavButton>\n            {isLoggedIn && (\n                <NoticesCategoriesNavButton\n                    to={'/notices/favorite'}\n                    style={\n                        category === 'favorite'\n                            ? {\n                                  color: '#ffffff',\n                                  backgroundColor: '#F59256',\n                                  border: 0,\n                              }\n                            : undefined\n                    }\n                >\n                    favorite ads\n                </NoticesCategoriesNavButton>\n            )}\n            {isLoggedIn && (\n                <NoticesCategoriesNavButton\n                    to={'/notices/own'}\n                    style={\n                        category === 'own'\n                            ? {\n                                  color: '#ffffff',\n                                  backgroundColor: '#F59256',\n                                  border: 0,\n                              }\n                            : undefined\n                    }\n                >\n                    my ads\n                </NoticesCategoriesNavButton>\n            )}\n            <ModalAddNewNotice></ModalAddNewNotice>\n        </NoticesCategoriesNavList>\n    );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { getNotices, getAuth } from 'redux/selectors';\nimport { fetchNotices } from 'redux/Notices/noticesOperations';\nimport { fetchFavoriteNotices, fetchDeleteNotice, updateFavoriteNotice} from 'redux/Notices/fetchNotices';\nimport { PageSection } from 'components/Utils/Styles/basicStyle';\nimport { Title } from 'components/Utils/Styles/basicStyle';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { NoticesCategoriesNav } from 'components/Notices/NoticesCategoriesNav/NoticesCategoriesNav';\nimport { NoticesCategoriesList } from 'components/Notices/NoticesCategoriesList/NoticesCategoriesList';\n\n\nconst NoticesPage = () => {\n    const { isLoggedIn } = useSelector(getAuth);\n\n    const dispatch = useDispatch();\n    const allNoticesByCategory = useSelector(getNotices).items;\n    const [filter, setFilter] = useState('');\n    const [notices, setNotices] = useState([]);\n    const [favorite, setFavorite] = useState([])\n    const { category } = useParams();\n    const navigate = useNavigate();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const fetchFavorite = async () => {\n        if (!isLoggedIn) {\n            setFavorite([]);\n            return}\n        const results = await fetchFavoriteNotices();\n        const resultId = results.map(result => result._id)\n        setFavorite(resultId)\n    }\n\n    const updateFavorite = async (id) => {\n        const results = await updateFavoriteNotice(id);\n        setFavorite(results.favorites)\n    }\n\n    const deleteMyNotices = async (id) => {\n        const results = await fetchDeleteNotice(id);\n        const newNotices = notices.filter(notice =>\n            notice._id !== results.data._id);\n        setNotices(newNotices)\n    }\n\n    useEffect(() => {\n        switch (category) {\n            case \"lost-found\":\n                dispatch(fetchNotices('lost-found'))\n                if (isLoggedIn) {\n                    fetchFavorite()\n                };\n                break;\n\n            case \"for-free\":\n                dispatch(fetchNotices(\"for-free\"))  \n                if (isLoggedIn) {\n                    fetchFavorite()\n                };\n                break;\n\n            case \"sell\":\n                dispatch(fetchNotices(\"sell\")) \n                if (isLoggedIn) {\n                    fetchFavorite()\n                };\n                break;\n        \n            case \"favorite\":\n                if (!isLoggedIn) {\n                    navigate('/notices/lost-found')\n                    return\n                };\n                dispatch(fetchNotices('myFavorite'))\n                fetchFavorite()\n                break;\n        \n            case \"own\":\n                if (!isLoggedIn) {\n                    navigate('/notices/lost-found')\n                    return\n                };\n                dispatch(fetchNotices(''))\n                fetchFavorite()\n                break;\n\n            default:\n                navigate('/notices/sell')\n} \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isLoggedIn, category, dispatch, navigate])\n\n    useEffect(() => {\n    setNotices(allNoticesByCategory);\n    }, [allNoticesByCategory])\n    \n    useEffect(() => {\n      const filtredNotices = allNoticesByCategory.filter(notice => {\n            let areSimilarWords = false;\n\n            for (const word of filter.trim().split(' ')) {\n                if (notice.title.toLowerCase().includes(word.toLowerCase())) {\n                    areSimilarWords = true;\n                    break\n                }\n            }\n            \n            return areSimilarWords;\n        })\n        setNotices(filtredNotices);\n    \n      \n    }, [allNoticesByCategory, filter])\n    \n\n\n    const onFilterChange = e => {\n        setFilter(e.currentTarget.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (filter.trim() === '') {\n            return\n        }\n        setFilter('')\n        \n    };\n\n    return (\n        <PageSection>\n            <Title>Find your favorite pet</Title>\n            <SearchBar\n                styles={{ marginBottom: 0 }}\n                handleSubmit={handleSubmit}\n                onFilterChange={onFilterChange}\n                filter={filter}\n            />            \n            <NoticesCategoriesNav />\n\n            <NoticesCategoriesList notices={notices} favorite={favorite} updateFavorite={updateFavorite} deleteMyNotices={deleteMyNotices} />\n\n        </PageSection>\n    );\n};\n\nexport default NoticesPage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["SearchForm","styled","SearchButton","SearchBar","handleSubmit","filter","onFilterChange","styles","style","onSubmit","value","onChange","placeholder","type","trim","Search","sx","fontSize","HighlightOff","fetchFavoriteNotices","axios","response","data","updateFavoriteNotice","noticeId","fetchDeleteNotice","NavButton","category","title","name","birthday","breed","updateFields","color","backgroundColor","border","undefined","onClick","e","target","htmlFor","Input","Label","LabelFemale","LabelMale","SpanTXT","Thumb","Title","TitleColor","sex","location","price","comments","id","petsPhoto","files","ModalCard","INITIAL_DATA","Close","useState","setData","fields","prev","steps","currentStepIndex","setCurrentStepIndex","step","isFirstStep","isLastStep","length","goTo","index","next","i","back","useMultistepForm","dispatch","useDispatch","entries","Object","entry","preventDefault","formData","FormData","forEach","append","property","console","log","addNoticeOperation","ModalStyled","Modal","OpenBtn","CloseBtn","StyledIcon","CloseIcon","modalIsOpen","setIsOpen","closeModal","isOpen","onRequestClose","contentLabel","shouldCloseOnOverlayClick","overlay","NoticesCategoriesNavList","NoticesCategoriesNavButton","NavLink","NoticesCategoriesNav","isLoggedIn","useSelector","getAuth","useEffect","getUserOperation","useParams","to","allNoticesByCategory","getNotices","items","setFilter","notices","setNotices","favorite","setFavorite","navigate","useNavigate","fetchFavorite","results","resultId","map","result","_id","updateFavorite","favorites","deleteMyNotices","newNotices","notice","fetchNotices","filtredNotices","areSimilarWords","split","word","toLowerCase","includes","marginBottom","currentTarget","NoticesCategoriesList","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}