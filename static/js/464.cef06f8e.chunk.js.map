{"version":3,"file":"static/js/464.cef06f8e.chunk.js","mappings":"wKAEaA,EAAaC,EAAAA,EAAAA,KAAW,kPAYxBC,EAAeD,EAAAA,EAAAA,OAAa,4L,mBCX5BE,EAAY,SAAH,GAAwD,IAAnDC,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAAQC,EAAc,EAAdA,eAAgBC,EAAM,EAANA,OAC7D,OAAO,UAACP,EAAU,CAACQ,MAAOD,EAAQE,SAAUL,EAAa,WACjD,SAAC,KAAW,CAACM,MAAOL,EAAQM,SAAUL,EAAgBM,YAAa,YACvE,SAACV,EAAY,CAACW,KAAK,SAAQ,UAAE,SAACC,EAAA,EAAU,CAAEC,GAAI,CAAEC,SAAU,UAElE,C,iKCNaC,EAAShB,EAAAA,EAAAA,OAAa,+gBAgCtBiB,GAPOjB,EAAAA,EAAAA,EAAQ,mHAOPA,EAAAA,EAAAA,GAAS,uTAiBjBkB,EAAclB,EAAAA,EAAAA,MAAY,qlBA4B1BmB,EAAcnB,EAAAA,EAAAA,QAAc,gS,0NC5E5BoB,EAA2BpB,EAAAA,EAAAA,GAAS,+LAWpCqB,GAA6BrB,EAAAA,EAAAA,GAAOsB,EAAAA,GAAPtB,CAAe,yU,uCCV5CuB,GAAgBvB,EAAAA,EAAAA,GAAOgB,EAAAA,GAAPhB,CAAc,oGAU9BwB,EAAgBxB,EAAAA,EAAAA,KAAW,gHAS3ByB,EAAmBzB,EAAAA,EAAAA,IAAU,iGAM7B0B,EAAW1B,EAAAA,EAAAA,OAAa,+UAexB2B,EAAiB3B,EAAAA,EAAAA,GAAS,iHAO1B4B,EAAO5B,EAAAA,EAAAA,EAAQ,iHAOf6B,EAAiB7B,EAAAA,EAAAA,GAAS,+LAa1B8B,EAAY9B,EAAAA,EAAAA,MAAY,2IAQxB+B,EAAY/B,EAAAA,EAAAA,MAAY,6SAexBgC,EAAgBhC,EAAAA,EAAAA,IAAU,8CAI1BiC,GAAYjC,EAAAA,EAAAA,GAAOgB,EAAAA,GAAPhB,CAAc,8HAQ1BkC,GAAalC,EAAAA,EAAAA,GAAOmC,IAAPnC,CAAa,kZ,mBCpF1BoC,EAAiB,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAA8BF,EAAAA,EAAAA,UAAS,IAAG,eAAnCG,EAAO,KAAEC,EAAU,KAC1B,GAA0BJ,EAAAA,EAAAA,UAAS,IAAG,eAA/BK,EAAK,KAAEC,EAAQ,KACtB,GAA0BN,EAAAA,EAAAA,UAAS,IAAG,eAA/BO,EAAK,KAAEC,EAAQ,KACtB,GAAiCR,EAAAA,EAAAA,WAAS,GAAM,eAAzCS,EAAW,KAAEC,EAAS,KAa7B,SAASC,IACLD,GAAU,EACd,CAbAd,IAAAA,cAAoB,SAepB,IAAMgB,EAAe,SAAAC,GACjB,IAAMZ,EAAQY,EAAEC,OAAOb,MACjB/B,EAAQ2C,EAAEC,OAAO5C,MACvB,OAAQ+B,GACJ,IAAK,aACDC,EAAShC,GACT,MAEJ,IAAK,eACDkC,EAAWlC,GACX,MAEJ,IAAK,aACDoC,EAASpC,GACT,MAEJ,IAAK,aACDsC,EAAStC,GACT,MAEJ,QACI,OAEZ,EAYM6C,GAAeC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IACvCC,GAAiBF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IACzCE,GAAkBH,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IAC1CG,GAAeJ,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IAE7C,OACE,UAAC/B,EAAgB,YACb,gBAAKmC,QAvDX,WACIX,GAAU,EACd,EAqD+BY,GAAG,SAAQ,UAChC,SAACC,EAAA,EAAa,OAElB,UAAC5B,EAAU,CACT6B,OAAQf,EAEVgB,eAAgBd,EAChB3C,MAAO,CAAE0D,QAAS,CAAEC,WAAY,yBAChCC,aAAa,mBAAkB,WAE7B,SAACzC,EAAQ,CACLd,KAAK,SACLgD,QAASV,EACT,aAAW,QAAO,UAElB,SAACkB,EAAA,EAAS,OAGR,SAACzC,EAAc,UAAC,aAChB,SAACC,EAAI,UAAC,qFAId,UAACC,EAAc,YACb,SAACN,EAAa,CAACX,KAAK,SAAQ,SAAC,mBAC7B,SAACW,EAAa,CAACX,KAAK,SAAQ,SAAC,gBAC7B,SAACW,EAAa,CAACX,KAAK,SAAQ,SAAC,aAG/B,UAACY,EAAa,CAAChB,SA9CA,SAAA4C,GACjBA,EAAEiB,iBACFhC,EAAS,CAAEG,MAAAA,EAAOE,QAAAA,EAASE,MAAAA,EAAOE,MAAAA,IAClCL,EAAS,IACTE,EAAW,IACXE,EAAS,IACTE,EAAS,GAEb,EAsC4C,WAClC,UAACjB,EAAS,CAACwC,QAAQ,eAAc,UAAC,iBACjB,0BAAM,UAEvB,SAACvC,EAAS,CACNnB,KAAK,OACL2D,KAAK,aACL5D,YAAY,YACZF,MAAO+B,EACP9B,SAAUyC,EACVU,GAAIP,KAER,SAACxB,EAAS,CAACwC,QAAQ,iBAAgB,SAAC,cACpC,SAACvC,EAAS,CACNnB,KAAK,OACL2D,KAAK,eACL5D,YAAY,gBACZF,MAAOiC,EACPhC,SAAUyC,EACVU,GAAIJ,KAGR,SAAC3B,EAAS,CAACwC,QAAQ,kBAAiB,SAAC,mBAGrC,SAACvC,EAAS,CACNnB,KAAK,OACL2D,KAAK,aACL5D,YAAY,qBACZF,MAAOmC,EACPlC,SAAUyC,EACVU,GAAIH,KAGR,SAAC5B,EAAS,CAACwC,QAAQ,eAAc,SAAC,WAClC,SAACvC,EAAS,CACNnB,KAAK,OACL2D,KAAK,aACL5D,YAAY,aACZF,MAAOqC,EACPpC,SAAUyC,EACVU,GAAIF,KAEV,UAAC3B,EAAa,YACZ,SAACC,EAAS,CAAC2B,QAASV,EAAYtC,KAAK,SAAQ,SAAC,YAG9C,SAACqB,EAAS,CAACrB,KAAK,SAAQ,SAAC,oBAOvC,ECtKa4D,EAAuB,WAChC,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SAER,OACI,iCACI,UAACrD,EAAwB,YACrB,SAACC,EAA0B,CAACsD,GAAI,sBAAwBpE,MAAoB,eAAbkE,EAA4B,CAAEG,MAAO,UAAWC,gBAAiB,UAAWC,OAAQ,QAAMC,EAAU,SAAC,gBACpK,SAAC1D,EAA0B,CAACsD,GAAI,oBAAsBpE,MAAoB,aAAbkE,EAA0B,CAAEG,MAAO,UAAWC,gBAAiB,UAAWC,OAAQ,QAAMC,EAAU,SAAC,mBAChK,SAAC1D,EAA0B,CAACsD,GAAI,gBAAiBpE,MAAoB,SAAbkE,EAAsB,CAAEG,MAAO,UAAWC,gBAAiB,UAAWC,OAAQ,QAAMC,EAAU,SAAC,UACvJ,SAAC1D,EAA0B,CAACsD,GAAI,oBAAsBpE,MAAoB,aAAbkE,EAA0B,CAAEG,MAAO,UAAWC,gBAAiB,UAAWC,OAAQ,QAAMC,EAAU,SAAC,kBAChK,SAAC1D,EAA0B,CAACsD,GAAI,eAAiBpE,MAAoB,QAAbkE,EAAqB,CAAEG,MAAO,UAAWC,gBAAiB,UAAWC,OAAQ,QAAMC,EAAU,SAAC,eAE1J,SAAC3C,EAAc,MAG3B,E,UCiEA,EAvEoB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACX0C,GAAuBC,EAAAA,EAAAA,IAAYC,EAAAA,IAAYC,MACrD,GAA4B5C,EAAAA,EAAAA,UAAS,IAAG,eAAjCnC,EAAM,KAAEgF,EAAS,KACxB,GAA8B7C,EAAAA,EAAAA,UAAS,IAAG,eAAnC8C,EAAO,KAAEC,EAAU,KAClBb,GAAaC,EAAAA,EAAAA,MAAbD,SACFc,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACN,OAAQhB,GACJ,IAAK,aACDpC,GAASqD,EAAAA,EAAAA,GAAa,SACtB,MAEJ,IAAK,WACHrD,GAASqD,EAAAA,EAAAA,GAAa,kBACpB,MAEJ,IAAK,OACHrD,GAAUqD,EAAAA,EAAAA,GAAa,SACrB,MAEJ,IAAK,WAGL,IAAK,MACD,MAEJ,QACIH,EAAS,uBAErB,GAAG,CAACd,EAAUpC,EAAUkD,IAwBxB,OACI,UAAC,KAAW,YACR,SAAC,KAAK,UAAC,4BACP,SAACrF,EAAA,EAAS,CACNI,OAAQ,CAAEqF,aAAc,GACxBxF,aAtBS,SAAAiD,GACjBA,EAAEiB,iBACF,IAAMuB,EAAiBZ,EAAqB5E,QAAO,SAAAyF,GAC/C,IAEoC,EAFhCC,GAAkB,EAAM,UAET1F,EAAO2F,MAAM,MAAI,IAApC,2BAAsC,CAAC,IAA5BC,EAAI,QACX,GAAIH,EAAOrD,MAAMyD,cAAcC,SAASF,EAAKC,eAAgB,CACzDH,GAAkB,EAClB,KACJ,CACJ,CAAC,+BAED,OAAOA,CACX,IACAR,EAAWM,EACf,EAQYvF,eA3BW,SAAA+C,GACnBgC,EAAUhC,EAAE+C,cAAc1F,MAC9B,EA0BYL,OAAQA,KAEZ,SAACoE,EAAoB,KAErB,SAAC4B,EAAA,EAAqB,CAACf,QAASA,MAG5C,C","sources":["components/SearchBar/SearchBarStyled.jsx","components/SearchBar/SearchBar.jsx","components/Utils/Styles/basicStyle.js","components/NoticesCategoriesNav/NoticesCategoriesNavStyled.jsx","components/Modals/modalAddNotice/modalAddNoticeStyled.jsx","components/Modals/modalAddNotice/modalAddNotice.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","pages/Notices/NoticesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\nwidth: 280px;\nposition: relative;\nmargin: 0 auto;\nmargin-top: 28px;\n    margin-bottom: 40px;\n    @media (min-width: 768px) {\n        width: 652px;\n        margin-top: 40px;\n        margin-bottom: 60px;\n    }\n`\nexport const SearchButton = styled.button`\n    border: none;\n    background-color: transparent;\n    width: 32px;\n    height: 40px;\n    padding: 0;\n    position: absolute;\n    top: 3px;\n    right: 0;\n`","import SearchIcon from '@mui/icons-material/Search';\nimport { SearchButton, SearchForm } from './SearchBarStyled'\nimport { InputSearch  } from 'components/Utils/Styles/basicStyle'\nexport const SearchBar = ({handleSubmit, filter, onFilterChange, styles}) => {\n    return <SearchForm style={styles} onSubmit={handleSubmit}>\n            <InputSearch value={filter} onChange={onFilterChange} placeholder={'Search'}></InputSearch>\n        <SearchButton type=\"submit\" ><SearchIcon  sx={{ fontSize: 20 }} /></SearchButton>\n        </SearchForm>\n}","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: inherit;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.38;\n    width: 248px;\n    height: 38px;\n    color: #f59256;\n    background: #ffffff;\n    border: 2px solid #f59256;\n    border-radius: 40px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 8px 28px;\n    cursor: pointer;\n    &:hover,\n    &:focus {\n        color: #ff6101;\n        border-color: #ff6101;\n    }\n`;\n\nexport const Text = styled.p`\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    color: #111321;\n`;\n\nexport const Title = styled.h1`\n    font-style: normal;\n    font-weight: 700;\n    font-size: 24px;\n    padding-top: 40px;\n    text-align: center;\n\n    @media (min-width: 768px) {\n        padding-top: 90px;\n        font-size: 48px;\n    }\n\n    @media (min-width: 1280px) {\n        padding-top: 60px;\n    }\n`;\n\nexport const InputSearch = styled.input`\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    width: 236px;\n    height: 40px;\n    padding: 0 32px 0 12px;\n    color: #535353;\n    background: #ffffff;\n    box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n    border-radius: 40px;\n    border: none;\n    outline: none;\n    &:hover,\n    &:focus {\n        border: 1px solid rgba(245, 146, 86, 0.5);\n    }\n\n    @media (min-width: 480px) {\n    }\n    @media (min-width: 768px) {\n        width: 608px;\n    }\n`;\n\nexport const PageSection = styled.section`\n    text-align: center;\n    width: 280px;\n    padding: 0 5px;\n    margin: 0 auto;\n    @media (min-width: 768px) {\n        width: 704px;\n        padding: 0 17px;\n    }\n    @media (min-width: 1280px) {\n        width: 1248px;\n        padding: 0 1px;\n    }\n`;\n\n//examples for adaptive App. How use see above.\n// @media (min-width: 320px) {\n//         width: 380px;\n//     }\n//     @media (min-width: 768px) {\n//         width: 608px;\n//     }\n// @media (min-width: 1280px) {\n//         width: 608px;\n//     }\n","import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\nexport const NoticesCategoriesNavList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 12px;\n    margin-top: 28px;\n    @media (min-width: 768px) {\n       margin-top: 40px;\n       width: 70%;\n    }\n`\n\nexport const NoticesCategoriesNavButton = styled(NavLink)`\nfont-family: 'Manrope';\nfont-weight: 500;\nfont-size: 14px;\nline-height: 1.36;\nletter-spacing: 0.04em;\ncolor: #111111;\nbackground: #FFFFFF;\nborder: 2px solid #F59256;\nborder-radius: 40px;\npadding: 8px 28px;\n@media (min-width: 768px) {\n       font-size: 20px;\n       padding: 10px 28px;\n}\n\n\n`","import styled from '@emotion/styled';\nimport Modal from 'react-modal';\nimport { Button } from 'components/Utils/Styles/basicStyle';\n\nexport const CategoriesBtn = styled(Button)`\n \n  width:fit-content; \n  display: flex;\n  flex-direction: row; \n  \n \n`;\n\n\nexport const AddNoticeForm = styled.form`\n display: flex;\n flex-direction: column;\n \n padding: 10px;\n margin-bottom: 40px;\n\n`;\n\nexport const AddNoticeWrapper = styled.div` \n  padding: 40px;\n  border-radius: 40px;\n  background-color: #FFFFFF;\n`;\n\nexport const CloseBtn = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-width:34px;    \n    height: 34px;\n    padding: 0;   \n    margin-left: auto;   \n    top: 3px;\n    right: 0;\n    border: none;\n    background-color: transparent;\n    transition: transform .25s cubic-bezier(.4,0,.2,1);\n\n`;\nexport const AddNoticeTitle = styled.h1`\n  margin-bottom: 20px;\n  font-size: 36px;\n  line-height: 1.36;\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 28px;\n  font-size: 20px;\n  line-height: 1.35;\n  text-align: center;\n`;\n\nexport const CategorierList = styled.ul`\n\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 32px;\nmargin-top: 30px;\n@media (min-width: 768px) {\n    margin-top: 60px;\n        column-gap: 32px;\n        \n    }\n`;\n\nexport const FormLabel = styled.label`\n  margin-top: 38px;\n  margin-bottom: 12px;  \n  font-weight: 500px;\n  font-size: 24px;\n  line-height: 1.08;   \n`;\n\nexport const FormInput = styled.input`\n  display:block;\n  margin: 0;\n  padding: 16px 10px;\n  font: inherit;\n  font-size: 18px;\n  outline: none;\n  border-radius: 40px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  background-color: #FDF7F2;\n   ::placeholder {\n        color: rgba(17, 17, 17, 0.6);\n    }\n`;\n\nexport const SubmitBtnList = styled.div`  \n  display: flex;  \n`;\n\nexport const SubmitBtn = styled(Button)` \n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 40px;\n  width: 180px; \n  height: 44px;\n`;\n\nexport const ModalStyle = styled(Modal)`\n  position: absolute;\n  width: 280px; \n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  padding: 20px;\n  border-radius: 20px;\n  background-color: #FFFFFF;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  @media (min-width: 768px) {\n    margin-top: 60px;\n    column-gap: 32px;\n    width: 608px;\n    height: 885px;\n    padding: 40px;\n    }\n  `;\n","import { useState, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Modal from 'react-modal';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport {\n  AddNoticeWrapper,\n  CloseBtn,\n  AddNoticeTitle,\n  Text,\n  ModalStyle,\n  CategorierList,\n  CategoriesBtn,\n  AddNoticeForm,\n  FormInput,\n  FormLabel,\n  SubmitBtnList,\n  SubmitBtn,\n} from './modalAddNoticeStyled';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\nexport const ModalAddNotice = () => {\n    const dispatch = useDispatch();\n    const [title, setTitle] = useState('');\n    const [namePet, setNamePet] = useState('');\n    const [birth, setBirth] = useState('');\n    const [breed, setBreed] = useState('');\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n    Modal.setAppElement('#root');\n\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    // function afterOpenModal() {\n    //     // references are now sync'd and can be accessed.\n    //     color = '#f00';\n    // }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    const handleChange = e => {\n        const title = e.target.title;\n        const value = e.target.value;\n        switch (title) {\n            case 'inputTitle':\n                setTitle(value);\n                break;\n\n            case 'inputNamePet':\n                setNamePet(value);\n                break;\n\n            case 'inputBirth':\n                setBirth(value);\n                break;\n\n            case 'inputBreed':\n                setBreed(value);\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch({ title, namePet, birth, breed });\n        setTitle('');\n        setNamePet('');\n        setBirth('');\n        setBreed('');\n        // должна очищаться и открывать следующую форму\n    };\n\n    const titleInputId = useMemo(() => nanoid(), []);\n    const namePetInputId = useMemo(() => nanoid(), []);\n    const birthPetInputId = useMemo(() => nanoid(), []);\n    const breedInputId = useMemo(() => nanoid(), []);\n\n    return (\n      <AddNoticeWrapper>\n          <div onClick={openModal} id=\"button\">\n              <AddCircleIcon />\n          </div>\n          <ModalStyle\n            isOpen={modalIsOpen}\n            // onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n          style={{ overlay: { background: 'rgba(17, 17, 17, 0.6' } }}\n          contentLabel=\"Modal add notice\"          \n          >              \n            <CloseBtn\n                type=\"submit\"\n                onClick={closeModal}\n                aria-label=\"close\"\n            >\n                <CloseIcon />\n            </CloseBtn>\n                  {/* <CloseBtn type=\"submit\" ><CloseIcon  sx={{ fontSize: 20 }} /></CloseBtn> */}\n                  <AddNoticeTitle>Add pet</AddNoticeTitle>\n                  <Text>\n                      Lorem ipsum dolor sit amet, consectetur Lorem ipsum\n                      dolor sit amet, consectetur\n                  </Text>\n          <CategorierList>\n            <CategoriesBtn type=\"submit\">In good hands</CategoriesBtn>\n            <CategoriesBtn type=\"submit\">lost/found</CategoriesBtn>\n            <CategoriesBtn type=\"submit\">sell</CategoriesBtn>\n          </CategorierList>\n\n          <AddNoticeForm onSubmit={handleSubmit}>\n              <FormLabel htmlFor=\"titleInputId\">\n                  Tittle of ad <span>*</span>\n              </FormLabel>\n              <FormInput\n                  type=\"text\"\n                  name=\"inputTitle\"\n                  placeholder=\"Type name\"\n                  value={title}\n                  onChange={handleChange}\n                  id={titleInputId}\n              />\n              <FormLabel htmlFor=\"namePetInputId\">Name pet</FormLabel>\n              <FormInput\n                  type=\"text\"\n                  name=\"inputNamePet\"\n                  placeholder=\"Type name pet\"\n                  value={namePet}\n                  onChange={handleChange}\n                  id={namePetInputId}\n              />\n\n              <FormLabel htmlFor=\"birthPetInputId\">\n                  Date of birth\n              </FormLabel>\n              <FormInput\n                  type=\"data\"\n                  name=\"inputBirth\"\n                  placeholder=\"Type date of birth\"\n                  value={birth}\n                  onChange={handleChange}\n                  id={birthPetInputId}\n              />\n\n              <FormLabel htmlFor=\"breedInputId\">Breed</FormLabel>\n              <FormInput\n                  type=\"text\"\n                  name=\"inputBreed\"\n                  placeholder=\"Type breed\"\n                  value={breed}\n                  onChange={handleChange}\n                  id={breedInputId}\n              />\n            <SubmitBtnList>\n              <SubmitBtn onClick={closeModal} type=\"submit\">\n                  Cancel\n              </SubmitBtn>\n              <SubmitBtn type=\"submit\">Next</SubmitBtn>\n            </SubmitBtnList>\n          </AddNoticeForm>\n              \n          </ModalStyle>\n      </AddNoticeWrapper>\n    );\n};\n\n","\nimport { useParams } from 'react-router-dom';\nimport { NoticesCategoriesNavList, NoticesCategoriesNavButton } from 'components/NoticesCategoriesNav/NoticesCategoriesNavStyled';\nimport { ModalAddNotice } from 'components/Modals/modalAddNotice/modalAddNotice';\nexport const NoticesCategoriesNav = () => {\n    const { category } = useParams();\n\n    return (\n        <>\n            <NoticesCategoriesNavList>\n                <NoticesCategoriesNavButton to={'/notices/lost-found'}  style={category === \"lost-found\" ? { color: '#ffffff', backgroundColor: '#F59256', border: 0 } : undefined}>lost/found</NoticesCategoriesNavButton>\n                <NoticesCategoriesNavButton to={'/notices/for-free'}  style={category === \"for-free\" ? { color: '#ffffff', backgroundColor: '#F59256', border: 0 } : undefined}>In good hands</NoticesCategoriesNavButton>\n                <NoticesCategoriesNavButton to={'/notices/sell'} style={category === \"sell\" ? { color: '#ffffff', backgroundColor: '#F59256', border: 0 } : undefined}>sell</NoticesCategoriesNavButton>\n                <NoticesCategoriesNavButton to={'/notices/favorite'}  style={category === \"favorite\" ? { color: '#ffffff', backgroundColor: '#F59256', border: 0 } : undefined}>Favorite ads</NoticesCategoriesNavButton>\n                <NoticesCategoriesNavButton to={'/notices/own'}  style={category === \"own\" ? { color: '#ffffff', backgroundColor: '#F59256', border: 0 } : undefined}>My ads</NoticesCategoriesNavButton>\n            </NoticesCategoriesNavList>\n            <ModalAddNotice />\n        </>\n        );\n};","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { getNotices } from 'redux/selectors';\nimport { fetchNotices } from 'redux/Notices/noticesOperations';\nimport { PageSection } from 'components/Utils/Styles/basicStyle';\nimport { Title } from 'components/Utils/Styles/basicStyle';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { NoticesCategoriesNav } from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport { NoticesCategoriesList } from 'components/NoticesCategoriesList/NoticesCategoriesList';\n\n\n\nconst NoticesPage = () => {\n    const dispatch = useDispatch();\n    const allNoticesByCategory = useSelector(getNotices).items;\n    const [filter, setFilter] = useState('');\n    const [notices, setNotices] = useState([]);\n    const { category } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        switch (category) {\n            case \"lost-found\":\n                dispatch(fetchNotices('lost'))\n                break;\n\n            case \"for-free\":\n              dispatch(fetchNotices(\"in_good_hands\"))  \n                break;\n\n            case \"sell\":\n              dispatch( fetchNotices(\"sell\")) \n                break;\n        \n            case \"favorite\":\n                break;\n        \n            case \"own\":\n                break;\n\n            default:\n                navigate('/notices/lost-found')\n} \n    }, [category, dispatch, navigate])\n\n\n    const onFilterChange = e => {\n        setFilter(e.currentTarget.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const filtredNotices = allNoticesByCategory.filter(notice => {\n            let areSimilarWords = false;\n\n            for (const word of filter.split(' ')) {\n                if (notice.title.toLowerCase().includes(word.toLowerCase())) {\n                    areSimilarWords = true;\n                    break\n                }\n            }\n            \n            return areSimilarWords;\n        })\n        setNotices(filtredNotices);\n    };\n\n    return (\n        <PageSection>\n            <Title>Find your favorite pet</Title>\n            <SearchBar\n                styles={{ marginBottom: 0 }}\n                handleSubmit={handleSubmit}\n                onFilterChange={onFilterChange}\n                filter={filter}\n            />            \n            <NoticesCategoriesNav />\n           \n            <NoticesCategoriesList notices={notices} />\n        </PageSection>\n    );\n};\n\nexport default NoticesPage;\n"],"names":["SearchForm","styled","SearchButton","SearchBar","handleSubmit","filter","onFilterChange","styles","style","onSubmit","value","onChange","placeholder","type","Search","sx","fontSize","Button","Title","InputSearch","PageSection","NoticesCategoriesNavList","NoticesCategoriesNavButton","NavLink","CategoriesBtn","AddNoticeForm","AddNoticeWrapper","CloseBtn","AddNoticeTitle","Text","CategorierList","FormLabel","FormInput","SubmitBtnList","SubmitBtn","ModalStyle","Modal","ModalAddNotice","dispatch","useDispatch","useState","title","setTitle","namePet","setNamePet","birth","setBirth","breed","setBreed","modalIsOpen","setIsOpen","closeModal","handleChange","e","target","titleInputId","useMemo","nanoid","namePetInputId","birthPetInputId","breedInputId","onClick","id","AddCircle","isOpen","onRequestClose","overlay","background","contentLabel","Close","preventDefault","htmlFor","name","NoticesCategoriesNav","category","useParams","to","color","backgroundColor","border","undefined","allNoticesByCategory","useSelector","getNotices","items","setFilter","notices","setNotices","navigate","useNavigate","useEffect","fetchNotices","marginBottom","filtredNotices","notice","areSimilarWords","split","word","toLowerCase","includes","currentTarget","NoticesCategoriesList"],"sourceRoot":""}