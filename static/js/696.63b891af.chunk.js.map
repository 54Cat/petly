{"version":3,"file":"static/js/696.63b891af.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBarStyled.jsx","components/SearchBar/SearchBar.jsx","redux/Notices/fetchNotices.js","components/ModalAddNewNotice/Step1.styled.jsx","components/ModalAddNewNotice/Step1.jsx","components/ModalAddNewNotice/Step2.jsx","components/ModalAddNewNotice/formAddNotice.styled.js","components/ModalAddNewNotice/formAddNotice.jsx","components/ModalAddNewNotice/useMultistepForm.js","components/ModalAddNewNotice/ModalAddNewNotice.styled.js","components/ModalAddNewNotice/ModalAddNewNotice.jsx","components/NoticesCategoriesNav/NoticesCategoriesNavStyled.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","pages/Notices/NoticesPage.jsx","redux/User/selectors.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\nwidth: 280px;\nposition: relative;\nmargin: 0 auto;\nmargin-top: 28px;\n    margin-bottom: 40px;\n    @media (min-width: 768px) {\n        width: 652px;\n        margin-top: 40px;\n        margin-bottom: 60px;\n    }\n`\nexport const SearchButton = styled.button`\n    border: none;\n    background-color: transparent;\n    width: 32px;\n    height: 40px;\n    padding: 0;\n    position: absolute;\n    top: 3px;\n    right: 0;\n`","import SearchIcon from '@mui/icons-material/Search';\nimport { SearchButton, SearchForm } from './SearchBarStyled'\nimport { InputSearch  } from 'components/Utils/Styles/basicStyle'\nexport const SearchBar = ({handleSubmit, filter, onFilterChange, styles}) => {\n    return <SearchForm style={styles} onSubmit={handleSubmit}>\n            <InputSearch value={filter} onChange={onFilterChange} placeholder={'Search'}></InputSearch>\n        <SearchButton type=\"submit\" ><SearchIcon  sx={{ fontSize: 20 }} /></SearchButton>\n        </SearchForm>\n}","import axios from 'axios';\n\nexport const fetchFavoriteNotices = async () => {\n    const response = await axios.get(\n        `https://petly-backend-23cb.onrender.com/api/notices/myFavorite`\n    );\n    return response.data;\n};\n\nexport const updateFavoriteNotice = async (noticeId) => {\n    const response = await axios.get(\n        `https://petly-backend-23cb.onrender.com/api/notices/favorite/${noticeId}`\n    );\n    return response.data;\n};\n","import styled from '@emotion/styled';\nexport const NavButton = styled.button`\n    font-size: 14px;\n    line-height: 1.36;\n    letter-spacing: 0.04em;\n    color: #111111;\n    background: #ffffff;\n    border: 2px solid #f59256;\n    border-radius: 40px;\n    padding: 8px 28px;\n    cursor: pointer;\n    @media (min-width: 768px) {\n        font-size: 20px;\n        padding: 10px 28px;\n    }\n`;\n","import React from 'react';\nimport { NavButton } from './Step1.styled';\n\nconst Step1 = ({ category, title, name, birthday, breed, updateFields }) => {\n    return (\n        <div>\n            <h1>Add pet</h1>\n            <div>\n                <NavButton\n                    type=\"button\"\n                    value=\"lost-found\"\n                    style={\n                        category === 'lost-found'\n                            ? {\n                                  color: '#ffffff',\n                                  backgroundColor: '#F59256',\n                                  border: 0,\n                              }\n                            : undefined\n                    }\n                    onClick={e => updateFields({ category: e.target.value })}\n                >\n                    lost/found\n                </NavButton>\n                <NavButton\n                    type=\"button\"\n                    value=\"for-free\"\n                    style={\n                        category === 'for-free'\n                            ? {\n                                  color: '#ffffff',\n                                  backgroundColor: '#F59256',\n                                  border: 0,\n                              }\n                            : undefined\n                    }\n                    onClick={e => updateFields({ category: e.target.value })}\n                >\n                    In good hands\n                </NavButton>\n                <NavButton\n                    type=\"button\"\n                    value=\"sell\"\n                    style={\n                        category === 'sell'\n                            ? {\n                                  color: '#ffffff',\n                                  backgroundColor: '#F59256',\n                                  border: 0,\n                              }\n                            : undefined\n                    }\n                    onClick={e => updateFields({ category: e.target.value })}\n                >\n                    sell\n                </NavButton>\n            </div>\n            <label htmlFor=\"title\">Title of ad</label>\n            <input\n                type=\"text\"\n                placeholder=\"Type name pet\"\n                name=\"title\"\n                value={title}\n                onChange={e => updateFields({ title: e.target.value })}\n            />\n\n            <label htmlFor=\"name\">Name pet</label>\n            <input\n                type=\"text\"\n                placeholder=\"Type name pet\"\n                name=\"name\"\n                value={name}\n                onChange={e => updateFields({ name: e.target.value })}\n            />\n\n            <label htmlFor=\"birthday\">Date of birth</label>\n            <input\n                type=\"text\"\n                placeholder=\"Type name pet\"\n                name=\"birthday\"\n                value={birthday}\n                onChange={e => updateFields({ birthday: e.target.value })}\n            />\n\n            <label htmlFor=\"breed\">Breed</label>\n            <input\n                type=\"text\"\n                placeholder=\"Type name pet\"\n                name=\"breed\"\n                value={breed}\n                onChange={e => updateFields({ breed: e.target.value })}\n            />\n        </div>\n    );\n};\n\nexport default Step1;\n","import React from 'react';\n\n// import * as yup from 'yup';\n\nconst Step2 = ({ category, sex, location, price, comments, updateFields }) => {\n    return (\n        <div>\n            <h1>Add pet</h1>\n            <div>\n                <input\n                    type=\"radio\"\n                    id=\"Choice1\"\n                    value=\"Male\"\n                    name={sex}\n                    onChange={e => updateFields({ sex: e.target.value })}\n                />\n                <label htmlFor=\"Choice1\">male</label>\n\n                <input\n                    type=\"radio\"\n                    id=\"Choice2\"\n                    value=\"Female\"\n                    name={sex}\n                    onChange={e => updateFields({ sex: e.target.value })}\n                />\n                <label htmlFor=\"Choice2\">female</label>\n            </div>\n\n            <label htmlFor=\"location\">Location*:</label>\n            <input\n                type=\"text\"\n                name=\"location\"\n                placeholder=\"Type name pet\"\n                value={location}\n                onChange={e => updateFields({ location: e.target.value })}\n            />\n\n            {category === 'sell' && (\n                <>\n                    <label htmlFor=\"price\">Price*:</label>\n                    <input\n                        type=\"text\"\n                        name=\"price\"\n                        placeholder=\"Type name pet\"\n                        value={price}\n                        onChange={e => updateFields({ price: e.target.value })}\n                    />\n                </>\n            )}\n\n            <label htmlFor=\"myPetsPhoto\">\n                Load the pet’s image:\n                <input\n                    id=\"myPetsPhoto\"\n                    type=\"file\"\n                    name=\"myPetsPhoto\"\n                    onChange={e =>\n                        updateFields({ myPetsPhoto: e.target.files[0] })\n                    }\n                />\n            </label>\n\n            <label htmlFor=\"comments\">Comments</label>\n            <input\n                type=\"text\"\n                name=\"comments\"\n                placeholder=\"Type name pet\"\n                value={comments}\n                onChange={e => updateFields({ comments: e.target.value })}\n            />\n        </div>\n    );\n};\nexport default Step2;\n\n// const dispatch = useDispatch();\n\n// const entries = Object.entries(data).filter(entry => entry[0] !== 'files');\n\n// const handleClick = () => {\n//     prev();\n// };\n\n// const onSubmit = async () => {\n//     const formData = new FormData();\n//     if (data.files) {\n//         data.files.forEach(file => {\n//             formData.append('files', file, file.name);\n//         });\n//     }\n\n//     entries.forEach(entry => {\n//         formData.append(entry[0], entry[1]);\n//     });\n\n//     dispatch(addNoticeOperation(formData));\n// };\n","import styled from '@emotion/styled';\n\nexport const ModalCard = styled.form`\n    box-sizing: border-box;\n    margin: 0 auto;\n    padding: 60px 20px 40px;\n    background-color: #ffffff;\n    border-radius: 20px;\n\n    display: flex;\n    flex-direction: column;\n\n    @media (min-width: 320px) {\n        width: 280px;\n    }\n\n    @media (min-width: 768px) {\n        padding: 32px 24px 32px 20px;\n        width: 704px;\n        border-radius: 40px;\n    }\n`;\n","import React, { useState } from 'react';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport { useMultistepForm } from './useMultistepForm';\nimport { useDispatch } from 'react-redux';\nimport { addNoticeOperation } from 'redux/Notices/noticesOperations';\n\n// import * as yup from 'yup';\n\nimport { ModalCard } from './formAddNotice.styled';\n\nconst INITIAL_DATA = {\n    category: 'sell',\n    title: '',\n    name: '',\n    birthday: '',\n    breed: '',\n    sex: '',\n    location: '',\n    price: '',\n    myPetsPhoto: '',\n    comments: '',\n};\n\nconst ModalContent = ({ Close }) => {\n    const [data, setData] = useState(INITIAL_DATA);\n\n    function updateFields(fields) {\n        setData(prev => {\n            return { ...prev, ...fields };\n        });\n    }\n\n    const {\n        // steps,\n        // currentStepIndex,\n        step,\n        isFirstStep,\n        isLastStep,\n        back,\n        next,\n    } = useMultistepForm([\n        <Step1 {...data} updateFields={updateFields} />,\n        <Step2 {...data} updateFields={updateFields} />,\n    ]);\n\n    const dispatch = useDispatch();\n\n    const entries = Object.entries(data).filter(entry => entry[0] !== 'files');\n\n    function onSubmit(e) {\n        e.preventDefault();\n        if (!isLastStep) return next();\n\n        const formData = new FormData();\n        entries.forEach(entry => {\n            formData.append(entry[0], entry[1]);\n        });\n        dispatch(addNoticeOperation(formData));\n\n        Close();\n    }\n\n    return (\n        <ModalCard onSubmit={onSubmit}>\n            {step}\n            <div>\n                {!isFirstStep ? (\n                    <button type=\"button\" onClick={back}>\n                        Back\n                    </button>\n                ) : (\n                    <button type=\"button\" onClick={Close}>\n                        Cancel\n                    </button>\n                )}\n                <button type=\"submit\">{isLastStep ? 'Done' : 'Next'}</button>\n            </div>\n        </ModalCard>\n    );\n};\n\nexport default ModalContent;\n","import { useState } from 'react';\n\nexport function useMultistepForm(steps) {\n    const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n    function next() {\n        setCurrentStepIndex(i => {\n            if (i >= steps.length - 1) return i;\n            return i + 1;\n        });\n    }\n\n    function back() {\n        setCurrentStepIndex(i => {\n            if (i <= 0) return i;\n            return i - 1;\n        });\n    }\n\n    function goTo(index) {\n        setCurrentStepIndex(index);\n    }\n\n    return {\n        currentStepIndex,\n        step: steps[currentStepIndex],\n        steps,\n        isFirstStep: currentStepIndex === 0,\n        isLastStep: currentStepIndex === steps.length - 1,\n        goTo,\n        next,\n        back,\n    };\n}\n","import styled from '@emotion/styled';\nimport Modal from 'react-modal';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport const ModalStyled = styled(Modal)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(1);\n    border-radius: 40px;\n    border-color: white;\n    background-color: red;\n\n    @media (min-width: 320px) {\n        width: 280px;\n    }\n\n    @media (min-width: 768px) {\n        width: 704px;\n    }\n`;\n\nexport const OpenBtn = styled.button`\n    line-height: 22px;\n    letter-spacing: 0.04em;\n`;\n\nexport const CloseBtn = styled.button`\n    position: absolute;\n    top: 23px;\n    right: 23px;\n    width: 34px;\n    height: 34px;\n    border-radius: 50%;\n    border-color: transparent;\n    cursor: pointer;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    @media (min-width: 768px) {\n        width: 44px;\n        height: 44px;\n\n        top: 12px;\n        right: 20px;\n    }\n`;\n\nexport const StyledIcon = styled(CloseIcon)`\n    fill: black;\n    width: 28px;\n    height: 28px;\n\n    &:hover {\n        fill: rgba(245, 146, 86, 1);\n    }\n\n    @media (min-width: 768px) {\n        width: 36px;\n        height: 36px;\n    }\n`;\n","import { useState } from 'react';\nimport ModalContent from './formAddNotice';\n\nimport {\n    ModalStyled,\n    CloseBtn,\n    StyledIcon,\n    OpenBtn,\n} from './ModalAddNewNotice.styled';\n\nconst ModalAddNewNotice = () => {\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <div>\n            <OpenBtn onClick={openModal}>Learn more</OpenBtn>\n            <ModalStyled\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                contentLabel=\"Example Modal\"\n                shouldCloseOnOverlayClick={true}\n                style={{\n                    overlay: {\n                        backgroundColor: 'rgba(17, 17, 17, 0.6)',\n                    },\n                }}\n            >\n                <CloseBtn onClick={closeModal}>\n                    <StyledIcon />\n                </CloseBtn>\n\n                <ModalContent Close={closeModal}></ModalContent>\n            </ModalStyled>\n        </div>\n    );\n};\n\nexport default ModalAddNewNotice;\n","import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\nexport const NoticesCategoriesNavList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 12px;\n    margin-top: 28px;\n    @media (min-width: 768px) {\n       margin-top: 40px;\n       width: 70%;\n    }\n`\n\nexport const NoticesCategoriesNavButton = styled(NavLink)`\nfont-family: 'Manrope';\nfont-weight: 500;\nfont-size: 14px;\nline-height: 1.36;\nletter-spacing: 0.04em;\ncolor: #111111;\nbackground: #FFFFFF;\nborder: 2px solid #F59256;\nborder-radius: 40px;\npadding: 8px 28px;\ncursor: pointer;\n@media (min-width: 768px) {\n       font-size: 20px;\n       padding: 10px 28px;\n}\n\n\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { getUserOperation } from '../../redux/User/userOperations';\nimport { getUser } from 'redux/User/selectors';\nimport ModalAddNewNotice from 'components/ModalAddNewNotice/ModalAddNewNotice';\nimport {\n    NoticesCategoriesNavList,\n    NoticesCategoriesNavButton,\n} from 'components/NoticesCategoriesNav/NoticesCategoriesNavStyled';\n// import { ModalAddNotice } from 'components/Modals/modalAddNotice/modalAddNotice';\n\nexport const NoticesCategoriesNav = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getUserOperation());\n    }, [dispatch]);\n\n    const userData = useSelector(getUser);\n    const token = userData.token;\n    const { category } = useParams();\n\n    return (\n        <NoticesCategoriesNavList>\n            <NoticesCategoriesNavButton\n                to={'/notices/sell'}\n                style={\n                    category === 'sell'\n                        ? {\n                              color: '#ffffff',\n                              backgroundColor: '#F59256',\n                              border: 0,\n                          }\n                        : undefined\n                }\n            >\n                sell\n            </NoticesCategoriesNavButton>\n            <NoticesCategoriesNavButton\n                to={'/notices/lost-found'}\n                style={\n                    category === 'lost-found'\n                        ? {\n                              color: '#ffffff',\n                              backgroundColor: '#F59256',\n                              border: 0,\n                          }\n                        : undefined\n                }\n            >\n                lost/found\n            </NoticesCategoriesNavButton>\n            <NoticesCategoriesNavButton\n                to={'/notices/for-free'}\n                style={\n                    category === 'for-free'\n                        ? {\n                              color: '#ffffff',\n                              backgroundColor: '#F59256',\n                              border: 0,\n                          }\n                        : undefined\n                }\n            >\n                In good hands\n            </NoticesCategoriesNavButton>\n            {token && (\n                <NoticesCategoriesNavButton\n                    to={'/notices/favorite'}\n                    style={\n                        category === 'favorite'\n                            ? {\n                                  color: '#ffffff',\n                                  backgroundColor: '#F59256',\n                                  border: 0,\n                              }\n                            : undefined\n                    }\n                >\n                    favorite ads\n                </NoticesCategoriesNavButton>\n            )}\n            {token && (\n                <NoticesCategoriesNavButton\n                    to={'/notices/own'}\n                    style={\n                        category === 'own'\n                            ? {\n                                  color: '#ffffff',\n                                  backgroundColor: '#F59256',\n                                  border: 0,\n                              }\n                            : undefined\n                    }\n                >\n                    my ads\n                </NoticesCategoriesNavButton>\n            )}\n            <ModalAddNewNotice></ModalAddNewNotice>\n            {/* <ModalAddNotice /> */}\n        </NoticesCategoriesNavList>\n    );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { getNotices } from 'redux/selectors';\nimport { getUser } from 'redux/User/selectors';\nimport { fetchNotices } from 'redux/Notices/noticesOperations';\nimport { fetchFavoriteNotices } from 'redux/Notices/fetchNotices';\nimport { PageSection } from 'components/Utils/Styles/basicStyle';\nimport { Title } from 'components/Utils/Styles/basicStyle';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { NoticesCategoriesNav } from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport { NoticesCategoriesList } from 'components/NoticesCategoriesList/NoticesCategoriesList';\nimport { updateFavoriteNotice } from '../../redux/Notices/fetchNotices'\n\n\nconst NoticesPage = () => {\n    const userData = useSelector(getUser);\n    const dispatch = useDispatch();\n    const allNoticesByCategory = useSelector(getNotices).items;\n    const [filter, setFilter] = useState('');\n    const [notices, setNotices] = useState([]);\n    const [favorite, setFavorite] = useState([])\n    const { category } = useParams();\n    const navigate = useNavigate();\n\n    const fetchFavorite = async () => {\n        const results = await fetchFavoriteNotices();\n        setFavorite(results)\n    }\n\n    const updateFavorite = async (id) => {\n        const results = await updateFavoriteNotice(id);\n        setFavorite(results.favorites)\n    }\n\n\n    useEffect(() => {\n        switch (category) {\n            case \"lost-found\":\n                dispatch(fetchNotices('lost-found'))\n                if (userData.token) {\n                    fetchFavorite()\n                };\n                break;\n\n            case \"for-free\":\n                dispatch(fetchNotices(\"for-free\"))  \n                if (userData.token) {\n                    fetchFavorite()\n                };\n                break;\n\n            case \"sell\":\n                dispatch(fetchNotices(\"sell\")) \n                if (userData.token) {\n                    fetchFavorite()\n                };\n                break;\n        \n            case \"favorite\":\n                if (!userData.token) {\n                    navigate('/notices/lost-found')\n                    return\n                };\n                dispatch( fetchNotices('myFavorite'))\n                break;\n        \n            case \"own\":\n                if (!userData.token) {\n                    navigate('/notices/lost-found')\n                    return\n                };\n                dispatch(fetchNotices(''))\n                fetchFavorite()\n                break;\n\n            default:\n                navigate('/notices/sell')\n} \n    }, [userData.token, category, dispatch, navigate])\n\n    useEffect(() => {\n    setNotices(allNoticesByCategory);\n    }, [allNoticesByCategory])\n    \n\n\n    const onFilterChange = e => {\n        setFilter(e.currentTarget.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const filtredNotices = allNoticesByCategory.filter(notice => {\n            let areSimilarWords = false;\n\n            for (const word of filter.split(' ')) {\n                if (notice.title.toLowerCase().includes(word.toLowerCase())) {\n                    areSimilarWords = true;\n                    break\n                }\n            }\n            \n            return areSimilarWords;\n        })\n        setNotices(filtredNotices);\n    };\n\n    return (\n        <PageSection>\n            <Title>Find your favorite pet</Title>\n            <SearchBar\n                styles={{ marginBottom: 0 }}\n                handleSubmit={handleSubmit}\n                onFilterChange={onFilterChange}\n                filter={filter}\n            />            \n            <NoticesCategoriesNav />\n\n            <NoticesCategoriesList notices={notices} favorite={favorite} updateFavorite={updateFavorite} />\n\n        </PageSection>\n    );\n};\n\nexport default NoticesPage;\n","export const getUser = ({ user }) => user.user; \r\nexport const getLoader = ({ user }) => user.isLoading;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["SearchForm","styled","SearchButton","SearchBar","handleSubmit","filter","onFilterChange","styles","style","onSubmit","value","onChange","placeholder","type","Search","sx","fontSize","fetchFavoriteNotices","axios","response","data","updateFavoriteNotice","noticeId","NavButton","category","title","name","birthday","breed","updateFields","color","backgroundColor","border","undefined","onClick","e","target","htmlFor","sex","location","price","comments","id","myPetsPhoto","files","ModalCard","INITIAL_DATA","Close","useState","setData","fields","prev","steps","currentStepIndex","setCurrentStepIndex","step","isFirstStep","isLastStep","length","goTo","index","next","i","back","useMultistepForm","dispatch","useDispatch","entries","Object","entry","preventDefault","formData","FormData","forEach","append","addNoticeOperation","ModalStyled","Modal","OpenBtn","CloseBtn","StyledIcon","CloseIcon","modalIsOpen","setIsOpen","closeModal","isOpen","onRequestClose","contentLabel","shouldCloseOnOverlayClick","overlay","NoticesCategoriesNavList","NoticesCategoriesNavButton","NavLink","NoticesCategoriesNav","useEffect","getUserOperation","token","useSelector","getUser","useParams","to","userData","allNoticesByCategory","getNotices","items","setFilter","notices","setNotices","favorite","setFavorite","navigate","useNavigate","fetchFavorite","results","updateFavorite","favorites","fetchNotices","marginBottom","filtredNotices","notice","areSimilarWords","split","word","toLowerCase","includes","currentTarget","NoticesCategoriesList","user","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}